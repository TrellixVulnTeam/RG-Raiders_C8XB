{"ast":null,"code":"export var CONFIG = {\n  graphqlURL: function () {\n    var _process$env = process.env,\n        url = _process$env.NEXT_PUBLIC_GRAPHQL_URL,\n        host = _process$env.NEXT_PUBLIC_GRAPHQL_HOST;\n    if (url) return url;\n\n    if (host) {\n      return \"https://\".concat(host, \".onrender.com/v1/graphql\");\n    }\n\n    return 'http://localhost:8080/v1/graphql';\n  }(),\n  infuraId: process.env.NEXT_PUBLIC_INFURA_ID || '781d8466252d47508e177b8637b1c2fd',\n  openseaApiKey: process.env.NEXT_OPENSEA_API_KEY || undefined,\n  brightIdAppURL: process.env.NEXT_BRIGHTID_APP_URL || 'https://app.brightid.org',\n  brightIdNodeURL: process.env.NEXT_BRIGHTID_NODE_URL || 'http:%2f%2fnode.brightid.org',\n  publicURL: process.env.NEXT_PUBLIC_VERCEL_URL || 'http://localhost:3000',\n  gaId: process.env.NEXT_PUBLIC_GA4_ID || undefined,\n  clarityId: process.env.NEXT_CLARITY_ID || undefined\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/config.ts"],"names":["CONFIG","graphqlURL","process","env","url","NEXT_PUBLIC_GRAPHQL_URL","host","NEXT_PUBLIC_GRAPHQL_HOST","infuraId","NEXT_PUBLIC_INFURA_ID","openseaApiKey","NEXT_OPENSEA_API_KEY","undefined","brightIdAppURL","NEXT_BRIGHTID_APP_URL","brightIdNodeURL","NEXT_BRIGHTID_NODE_URL","publicURL","NEXT_PUBLIC_VERCEL_URL","gaId","NEXT_PUBLIC_GA4_ID","clarityId","NEXT_CLARITY_ID"],"mappings":"AAAA,OAAO,IAAMA,MAAM,GAAG;AACpBC,EAAAA,UAAU,EAAG,YAAM;AAAA,uBAIbC,OAAO,CAACC,GAJK;AAAA,QAEUC,GAFV,gBAEfC,uBAFe;AAAA,QAGWC,IAHX,gBAGfC,wBAHe;AAMjB,QAAIH,GAAJ,EAAS,OAAOA,GAAP;;AACT,QAAIE,IAAJ,EAAU;AACR,+BAAkBA,IAAlB;AACD;;AACD,WAAO,kCAAP;AACD,GAXW,EADQ;AAapBE,EAAAA,QAAQ,EACNN,OAAO,CAACC,GAAR,CAAYM,qBAAZ,IAAqC,kCAdnB;AAepBC,EAAAA,aAAa,EAAER,OAAO,CAACC,GAAR,CAAYQ,oBAAZ,IAAoCC,SAf/B;AAgBpBC,EAAAA,cAAc,EACZX,OAAO,CAACC,GAAR,CAAYW,qBAAZ,IAAqC,0BAjBnB;AAkBpBC,EAAAA,eAAe,EACbb,OAAO,CAACC,GAAR,CAAYa,sBAAZ,IAAsC,8BAnBpB;AAoBpBC,EAAAA,SAAS,EAAEf,OAAO,CAACC,GAAR,CAAYe,sBAAZ,IAAsC,uBApB7B;AAqBpBC,EAAAA,IAAI,EAAEjB,OAAO,CAACC,GAAR,CAAYiB,kBAAZ,IAAkCR,SArBpB;AAsBpBS,EAAAA,SAAS,EAAEnB,OAAO,CAACC,GAAR,CAAYmB,eAAZ,IAA+BV;AAtBtB,CAAf","sourcesContent":["export const CONFIG = {\n  graphqlURL: (() => {\n    const {\n      NEXT_PUBLIC_GRAPHQL_URL: url,\n      NEXT_PUBLIC_GRAPHQL_HOST: host,\n    } = process.env;\n\n    if (url) return url;\n    if (host) {\n      return `https://${host}.onrender.com/v1/graphql`;\n    }\n    return 'http://localhost:8080/v1/graphql';\n  })(),\n  infuraId:\n    process.env.NEXT_PUBLIC_INFURA_ID || '781d8466252d47508e177b8637b1c2fd',\n  openseaApiKey: process.env.NEXT_OPENSEA_API_KEY || undefined,\n  brightIdAppURL:\n    process.env.NEXT_BRIGHTID_APP_URL || 'https://app.brightid.org',\n  brightIdNodeURL:\n    process.env.NEXT_BRIGHTID_NODE_URL || 'http:%2f%2fnode.brightid.org',\n  publicURL: process.env.NEXT_PUBLIC_VERCEL_URL || 'http://localhost:3000',\n  gaId: process.env.NEXT_PUBLIC_GA4_ID || undefined,\n  clarityId: process.env.NEXT_CLARITY_ID || undefined,\n};\n"]},"metadata":{},"sourceType":"module"}