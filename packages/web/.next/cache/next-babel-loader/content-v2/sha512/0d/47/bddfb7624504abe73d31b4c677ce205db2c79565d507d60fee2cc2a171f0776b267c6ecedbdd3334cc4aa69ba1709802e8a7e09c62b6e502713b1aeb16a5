{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/profile/setup/personalityType.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { SetupPersonalityType } from 'components/Setup/SetupPersonalityType';\nimport { SetupProfile } from 'components/Setup/SetupProfile';\nimport { SetupContextProvider } from 'contexts/SetupContext';\nimport { getPersonalityInfo } from 'graphql/getPersonalityInfo';\nimport { useUser } from 'lib/hooks';\nimport React, { useEffect, useState } from 'react';\nexport const getStaticProps = async () => {\n  const {\n    types: personalityTypes,\n    parts: personalityParts\n  } = await getPersonalityInfo();\n  return {\n    props: {\n      personalityParts,\n      personalityTypes,\n      hideAppDrawer: true\n    }\n  };\n};\n\nconst PersonalityTypeSetup = props => {\n  var _user$player, _user$player$ColorAsp;\n\n  const {\n    personalityTypes\n  } = props;\n  const {\n    user\n  } = useUser({\n    redirectTo: '/'\n  });\n  const {\n    0: colorMask,\n    1: setColorMask\n  } = useState(user === null || user === void 0 ? void 0 : (_user$player = user.player) === null || _user$player === void 0 ? void 0 : (_user$player$ColorAsp = _user$player.ColorAspect) === null || _user$player$ColorAsp === void 0 ? void 0 : _user$player$ColorAsp.mask);\n\n  const load = () => {\n    const {\n      player\n    } = user !== null && user !== void 0 ? user : {};\n\n    if (player) {\n      if (colorMask === undefined && player.ColorAspect !== null) {\n        var _player$ColorAspect;\n\n        setColorMask((_player$ColorAspect = player.ColorAspect) === null || _player$ColorAspect === void 0 ? void 0 : _player$ColorAspect.mask);\n      }\n    }\n  };\n\n  useEffect(load, [user, colorMask]);\n  return __jsx(SetupContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(SetupProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(SetupPersonalityType, _extends({\n    personalityTypes,\n    colorMask,\n    setColorMask\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default PersonalityTypeSetup;","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/profile/setup/personalityType.tsx"],"names":["SetupPersonalityType","SetupProfile","SetupContextProvider","getPersonalityInfo","useUser","React","useEffect","useState","getStaticProps","types","personalityTypes","parts","personalityParts","props","hideAppDrawer","PersonalityTypeSetup","user","redirectTo","colorMask","setColorMask","player","ColorAspect","mask","load","undefined"],"mappings":";;;;;AAAA,SAASA,oBAAT,QAAqC,uCAArC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAM;AACJC,IAAAA,KAAK,EAAEC,gBADH;AAEJC,IAAAA,KAAK,EAAEC;AAFH,MAGF,MAAMT,kBAAkB,EAH5B;AAKA,SAAO;AACLU,IAAAA,KAAK,EAAE;AACLD,MAAAA,gBADK;AAELF,MAAAA,gBAFK;AAGLI,MAAAA,aAAa,EAAE;AAHV;AADF,GAAP;AAOD,CAbM;;AAiBP,MAAMC,oBAAqC,GAAIF,KAAD,IAAW;AAAA;;AACvD,QAAM;AAAEH,IAAAA;AAAF,MAAuBG,KAA7B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWZ,OAAO,CAAC;AAAEa,IAAAA,UAAU,EAAE;AAAd,GAAD,CAAxB;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CACxCS,IADwC,aACxCA,IADwC,uCACxCA,IAAI,CAAEI,MADkC,0EACxC,aAAcC,WAD0B,0DACxC,sBAA2BC,IADa,CAA1C;;AAIA,QAAMC,IAAI,GAAG,MAAM;AACjB,UAAM;AAAEH,MAAAA;AAAF,QAAaJ,IAAb,aAAaA,IAAb,cAAaA,IAAb,GAAqB,EAA3B;;AACA,QAAII,MAAJ,EAAY;AACV,UAAIF,SAAS,KAAKM,SAAd,IAA2BJ,MAAM,CAACC,WAAP,KAAuB,IAAtD,EAA4D;AAAA;;AAC1DF,QAAAA,YAAY,wBAACC,MAAM,CAACC,WAAR,wDAAC,oBAAoBC,IAArB,CAAZ;AACD;AACF;AACF,GAPD;;AAQAhB,EAAAA,SAAS,CAACiB,IAAD,EAAO,CAACP,IAAD,EAAOE,SAAP,CAAP,CAAT;AAEA,SACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD,WACM;AACFR,IAAAA,gBADE;AAEFQ,IAAAA,SAFE;AAGFC,IAAAA;AAHE,GADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAaD,CA9BD;;AA+BA,eAAeJ,oBAAf","sourcesContent":["import { SetupPersonalityType } from 'components/Setup/SetupPersonalityType';\nimport { SetupProfile } from 'components/Setup/SetupProfile';\nimport { SetupContextProvider } from 'contexts/SetupContext';\nimport { getPersonalityInfo } from 'graphql/getPersonalityInfo';\nimport { useUser } from 'lib/hooks';\nimport { InferGetStaticPropsType } from 'next';\nimport React, { useEffect, useState } from 'react';\n\nexport const getStaticProps = async () => {\n  const {\n    types: personalityTypes,\n    parts: personalityParts,\n  } = await getPersonalityInfo();\n\n  return {\n    props: {\n      personalityParts,\n      personalityTypes,\n      hideAppDrawer: true,\n    },\n  };\n};\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>;\n\nconst PersonalityTypeSetup: React.FC<Props> = (props) => {\n  const { personalityTypes } = props;\n  const { user } = useUser({ redirectTo: '/' });\n  const [colorMask, setColorMask] = useState<number | undefined>(\n    user?.player?.ColorAspect?.mask,\n  );\n\n  const load = () => {\n    const { player } = user ?? {};\n    if (player) {\n      if (colorMask === undefined && player.ColorAspect !== null) {\n        setColorMask(player.ColorAspect?.mask);\n      }\n    }\n  };\n  useEffect(load, [user, colorMask]);\n\n  return (\n    <SetupContextProvider>\n      <SetupProfile>\n        <SetupPersonalityType\n          {...{\n            personalityTypes,\n            colorMask,\n            setColorMask,\n          }}\n        />\n      </SetupProfile>\n    </SetupContextProvider>\n  );\n};\nexport default PersonalityTypeSetup;\n"]},"metadata":{},"sourceType":"module"}