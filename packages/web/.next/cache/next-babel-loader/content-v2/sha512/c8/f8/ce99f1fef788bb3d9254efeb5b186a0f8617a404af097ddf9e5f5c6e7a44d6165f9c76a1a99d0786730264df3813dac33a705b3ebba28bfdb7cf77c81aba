{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/profile/setup/playerType.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { SetupPlayerType } from 'components/Setup/SetupPlayerType';\nimport { SetupProfile } from 'components/Setup/SetupProfile';\nimport { SetupContextProvider } from 'contexts/SetupContext';\nimport { useUser } from 'lib/hooks';\nimport React, { useState } from 'react';\n\nvar PlayerTypeSetup = function PlayerTypeSetup(props) {\n  _s();\n\n  var playerTypeChoices = props.playerTypeChoices;\n\n  var _useState = useState(),\n      playerType = _useState[0],\n      setPlayerType = _useState[1];\n\n  var _useUser = useUser({\n    redirectTo: '/'\n  }),\n      user = _useUser.user;\n\n  if (user !== null && user !== void 0 && user.player) {\n    var player = user.player;\n\n    if (player.playerType && !playerType) {\n      setPlayerType(player.playerType);\n    }\n  }\n\n  return __jsx(SetupContextProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(SetupProfile, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(SetupPlayerType, {\n    playerTypeChoices: playerTypeChoices,\n    playerType: playerType,\n    setPlayerType: setPlayerType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(PlayerTypeSetup, \"MeAf4Jq3hGdWKy7N0sWqWc1g7Ak=\", false, function () {\n  return [useUser];\n});\n\n_c = PlayerTypeSetup;\nexport var __N_SSG = true;\nexport default PlayerTypeSetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerTypeSetup\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/profile/setup/playerType.tsx"],"names":["SetupPlayerType","SetupProfile","SetupContextProvider","useUser","React","useState","PlayerTypeSetup","props","playerTypeChoices","playerType","setPlayerType","redirectTo","user","player"],"mappings":";;;;;AAAA,SAASA,eAAT,QAAgC,kCAAhC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,oBAAT,QAAqC,uBAArC;AAGA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAeA,IAAMC,eAAgC,GAAG,SAAnCA,eAAmC,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC1CC,iBAD0C,GACpBD,KADoB,CAC1CC,iBAD0C;;AAAA,kBAEdH,QAAQ,EAFM;AAAA,MAE3CI,UAF2C;AAAA,MAE/BC,aAF+B;;AAAA,iBAGjCP,OAAO,CAAC;AAAEQ,IAAAA,UAAU,EAAE;AAAd,GAAD,CAH0B;AAAA,MAG1CC,IAH0C,YAG1CA,IAH0C;;AAKlD,MAAIA,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEC,MAAV,EAAkB;AAAA,QACRA,MADQ,GACGD,IADH,CACRC,MADQ;;AAEhB,QAAIA,MAAM,CAACJ,UAAP,IAAqB,CAACA,UAA1B,EAAsC;AACpCC,MAAAA,aAAa,CAACG,MAAM,CAACJ,UAAR,CAAb;AACD;AACF;;AAED,SACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,iBAAiB,EAAED,iBADrB;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,aAAa,EAAEC,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAWD,CAvBD;;GAAMJ,e;UAGaH,O;;;KAHbG,e;;AAwBN,eAAeA,eAAf","sourcesContent":["import { SetupPlayerType } from 'components/Setup/SetupPlayerType';\nimport { SetupProfile } from 'components/Setup/SetupProfile';\nimport { SetupContextProvider } from 'contexts/SetupContext';\nimport { Player_Type } from 'graphql/autogen/types';\nimport { getPlayerTypes } from 'graphql/getPlayerTypes';\nimport { useUser } from 'lib/hooks';\nimport { InferGetStaticPropsType } from 'next';\nimport React, { useState } from 'react';\n\nexport const getStaticProps = async () => {\n  const playerTypeChoices = await getPlayerTypes();\n\n  return {\n    props: {\n      playerTypeChoices,\n      hideAppDrawer: true,\n    },\n  };\n};\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>;\n\nconst PlayerTypeSetup: React.FC<Props> = (props) => {\n  const { playerTypeChoices } = props;\n  const [playerType, setPlayerType] = useState<Player_Type>();\n  const { user } = useUser({ redirectTo: '/' });\n\n  if (user?.player) {\n    const { player } = user;\n    if (player.playerType && !playerType) {\n      setPlayerType(player.playerType);\n    }\n  }\n\n  return (\n    <SetupContextProvider>\n      <SetupProfile>\n        <SetupPlayerType\n          playerTypeChoices={playerTypeChoices}\n          playerType={playerType}\n          setPlayerType={setPlayerType}\n        />\n      </SetupProfile>\n    </SetupContextProvider>\n  );\n};\nexport default PlayerTypeSetup;\n"]},"metadata":{},"sourceType":"module"}