{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetMemberships($address: String!) {\\n    getDaoHausMemberships(memberAddress: $address) {\\n      id\\n      moloch {\\n        id\\n        title\\n        version\\n        chain\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'fake-tag';\nimport { client } from './client';\nvar membershipsQuery = gql(_templateObject());\nexport var getMemberships = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n    var _yield$client$query$t, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (address) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 2:\n            _context.next = 4;\n            return client.query(membershipsQuery, {\n              address: address\n            }).toPromise();\n\n          case 4:\n            _yield$client$query$t = _context.sent;\n            data = _yield$client$query$t.data;\n            return _context.abrupt(\"return\", data === null || data === void 0 ? void 0 : data.getDaoHausMemberships);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getMemberships(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/graphql/getMemberships.ts"],"names":["gql","client","membershipsQuery","getMemberships","address","query","toPromise","data","getDaoHausMemberships"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AAMA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAMC,gBAAgB,GAAGF,GAAH,mBAAtB;AAcA,OAAO,IAAMG,cAAc;AAAA,sEAAG,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACvBA,OADuB;AAAA;AAAA;AAAA;;AAAA,6CACP,IADO;;AAAA;AAAA;AAAA,mBAELH,MAAM,CAC1BI,KADoB,CAEnBH,gBAFmB,EAGnB;AAAEE,cAAAA,OAAO,EAAPA;AAAF,aAHmB,EAKpBE,SALoB,EAFK;;AAAA;AAAA;AAEpBC,YAAAA,IAFoB,yBAEpBA,IAFoB;AAAA,6CASrBA,IATqB,aASrBA,IATqB,uBASrBA,IAAI,CAAEC,qBATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdL,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import gql from 'fake-tag';\n\nimport {\n  GetMembershipsQuery,\n  GetMembershipsQueryVariables,\n} from './autogen/types';\nimport { client } from './client';\n\nconst membershipsQuery = gql`\n  query GetMemberships($address: String!) {\n    getDaoHausMemberships(memberAddress: $address) {\n      id\n      moloch {\n        id\n        title\n        version\n        chain\n      }\n    }\n  }\n`;\n\nexport const getMemberships = async (address: string | null) => {\n  if (!address) return null;\n  const { data } = await client\n    .query<GetMembershipsQuery, GetMembershipsQueryVariables>(\n      membershipsQuery,\n      { address },\n    )\n    .toPromise();\n\n  return data?.getDaoHausMemberships;\n};\n"]},"metadata":{},"sourceType":"module"}