{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetQuestGuilds {\\n    quest_aggregate(distinct_on: guild_id) {\\n      nodes {\\n        guild_id\\n        guild {\\n          name\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetQuests(\\n    $limit: Int\\n    $status: QuestStatus_enum\\n    $guild_id: uuid\\n    $order: order_by\\n    $created_by_player_id: uuid\\n  ) {\\n    quest(\\n      limit: $limit\\n      order_by: { created_at: $order }\\n      where: {\\n        status: { _eq: $status }\\n        guild_id: { _eq: $guild_id }\\n        created_by_player_id: { _eq: $created_by_player_id }\\n      }\\n    ) {\\n      ...QuestFragment\\n    }\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetQuestIds($limit: Int) {\\n    quest(limit: $limit, order_by: { created_at: desc }) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'fake-tag';\nimport { GetQuestIdsDocument, GetQuestsDocument, Order_By, QuestStatus_Enum } from './autogen/types';\nimport { client as defaultClient } from './client';\nimport { QuestFragment } from './fragments'; // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\ngql(_templateObject()); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\ngql(_templateObject2(), QuestFragment); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\ngql(_templateObject3());\nexport var defaultQueryVariables = {\n  limit: 10,\n  status: QuestStatus_Enum.Open,\n  guild_id: undefined,\n  order: Order_By.Desc,\n  created_by_player_id: undefined\n};\nexport var getQuestIds = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var limit,\n        client,\n        _yield$client$query$t,\n        data,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            limit = _args.length > 0 && _args[0] !== undefined ? _args[0] : 50;\n            client = _args.length > 1 && _args[1] !== undefined ? _args[1] : defaultClient;\n            _context.next = 4;\n            return client.query(GetQuestIdsDocument, {\n              limit: limit\n            }).toPromise();\n\n          case 4:\n            _yield$client$query$t = _context.sent;\n            data = _yield$client$query$t.data;\n            return _context.abrupt(\"return\", (data === null || data === void 0 ? void 0 : data.quest.map(function (q) {\n              return q.id;\n            })) || []);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getQuestIds() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getQuests = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var queryVariables,\n        client,\n        _yield$client$query$t2,\n        data,\n        error,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            queryVariables = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : defaultQueryVariables;\n            client = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : defaultClient;\n            _context2.next = 4;\n            return client.query(GetQuestsDocument, queryVariables).toPromise();\n\n          case 4:\n            _yield$client$query$t2 = _context2.sent;\n            data = _yield$client$query$t2.data;\n            error = _yield$client$query$t2.error;\n\n            if (data) {\n              _context2.next = 11;\n              break;\n            }\n\n            if (!error) {\n              _context2.next = 10;\n              break;\n            }\n\n            throw error;\n\n          case 10:\n            return _context2.abrupt(\"return\", []);\n\n          case 11:\n            return _context2.abrupt(\"return\", data.quest);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getQuests() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/graphql/getQuests.ts"],"names":["gql","GetQuestIdsDocument","GetQuestsDocument","Order_By","QuestStatus_Enum","client","defaultClient","QuestFragment","defaultQueryVariables","limit","status","Open","guild_id","undefined","order","Desc","created_by_player_id","getQuestIds","query","toPromise","data","quest","map","q","id","getQuests","queryVariables","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AAGA,SACEC,mBADF,EAIEC,iBAJF,EAOEC,QAPF,EAQEC,gBARF,QASO,iBATP;AAUA,SAASC,MAAM,IAAIC,aAAnB,QAAwC,UAAxC;AACA,SAASC,aAAT,QAA8B,aAA9B,C,CAEA;;AACAP,GAAG,mBAAH,C,CAQA;;AACAA,GAAG,qBAqBCO,aArBD,CAAH,C,CAwBA;;AACAP,GAAG,oBAAH;AAaA,OAAO,IAAMQ,qBAA8C,GAAG;AAC5DC,EAAAA,KAAK,EAAE,EADqD;AAE5DC,EAAAA,MAAM,EAAEN,gBAAgB,CAACO,IAFmC;AAG5DC,EAAAA,QAAQ,EAAEC,SAHkD;AAI5DC,EAAAA,KAAK,EAAEX,QAAQ,CAACY,IAJ4C;AAK5DC,EAAAA,oBAAoB,EAAEH;AALsC,CAAvD;AAQP,OAAO,IAAMI,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBR,YAAAA,KADyB,2DACjB,EADiB;AAEzBJ,YAAAA,MAFyB,2DAERC,aAFQ;AAAA;AAAA,mBAIFD,MAAM,CAC1Ba,KADoB,CAC+BjB,mBAD/B,EACoD;AACvEQ,cAAAA,KAAK,EAALA;AADuE,aADpD,EAIpBU,SAJoB,EAJE;;AAAA;AAAA;AAIjBC,YAAAA,IAJiB,yBAIjBA,IAJiB;AAAA,6CAUlB,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACC,EAAT;AAAA,aAAhB,MAAgC,EAVd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXP,WAAW;AAAA;AAAA;AAAA,GAAjB;AAaP,OAAO,IAAMQ,SAAS;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,cADuB,8DACNlB,qBADM;AAEvBH,YAAAA,MAFuB,8DAENC,aAFM;AAAA;AAAA,mBAIOD,MAAM,CACjCa,KAD2B,CAE1BhB,iBAF0B,EAG1BwB,cAH0B,EAK3BP,SAL2B,EAJP;;AAAA;AAAA;AAIfC,YAAAA,IAJe,0BAIfA,IAJe;AAITO,YAAAA,KAJS,0BAITA,KAJS;;AAAA,gBAWlBP,IAXkB;AAAA;AAAA;AAAA;;AAAA,iBAYjBO,KAZiB;AAAA;AAAA;AAAA;;AAAA,kBAabA,KAba;;AAAA;AAAA,8CAgBd,EAhBc;;AAAA;AAAA,8CAmBhBP,IAAI,CAACC,KAnBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATI,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import gql from 'fake-tag';\nimport { Client } from 'urql';\n\nimport {\n  GetQuestIdsDocument,\n  GetQuestIdsQuery,\n  GetQuestIdsQueryVariables,\n  GetQuestsDocument,\n  GetQuestsQuery,\n  GetQuestsQueryVariables,\n  Order_By,\n  QuestStatus_Enum,\n} from './autogen/types';\nimport { client as defaultClient } from './client';\nimport { QuestFragment } from './fragments';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-expressions\ngql`\n  query GetQuestIds($limit: Int) {\n    quest(limit: $limit, order_by: { created_at: desc }) {\n      id\n    }\n  }\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-expressions\ngql`\n  query GetQuests(\n    $limit: Int\n    $status: QuestStatus_enum\n    $guild_id: uuid\n    $order: order_by\n    $created_by_player_id: uuid\n  ) {\n    quest(\n      limit: $limit\n      order_by: { created_at: $order }\n      where: {\n        status: { _eq: $status }\n        guild_id: { _eq: $guild_id }\n        created_by_player_id: { _eq: $created_by_player_id }\n      }\n    ) {\n      ...QuestFragment\n    }\n  }\n\n  ${QuestFragment}\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-expressions\ngql`\n  query GetQuestGuilds {\n    quest_aggregate(distinct_on: guild_id) {\n      nodes {\n        guild_id\n        guild {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const defaultQueryVariables: GetQuestsQueryVariables = {\n  limit: 10,\n  status: QuestStatus_Enum.Open,\n  guild_id: undefined,\n  order: Order_By.Desc,\n  created_by_player_id: undefined,\n};\n\nexport const getQuestIds = async (\n  limit = 50,\n  client: Client = defaultClient,\n) => {\n  const { data } = await client\n    .query<GetQuestIdsQuery, GetQuestIdsQueryVariables>(GetQuestIdsDocument, {\n      limit,\n    })\n    .toPromise();\n\n  return data?.quest.map((q) => q.id) || [];\n};\n\nexport const getQuests = async (\n  queryVariables = defaultQueryVariables,\n  client: Client = defaultClient,\n) => {\n  const { data, error } = await client\n    .query<GetQuestsQuery, GetQuestsQueryVariables>(\n      GetQuestsDocument,\n      queryVariables,\n    )\n    .toPromise();\n\n  if (!data) {\n    if (error) {\n      throw error;\n    }\n\n    return [];\n  }\n\n  return data.quest;\n};\n"]},"metadata":{},"sourceType":"module"}