{"ast":null,"code":"import _classCallCheck from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nexport var SetupOptions = /*#__PURE__*/function () {\n  function SetupOptions() {\n    _classCallCheck(this, SetupOptions);\n\n    _defineProperty(this, \"sections\", [{\n      label: 'About You',\n      title: {\n        base: 'About You',\n        sm: '1. About You'\n      }\n    }, {\n      label: 'Profile',\n      title: {\n        base: 'Profile',\n        sm: '2. Profile',\n        lg: '2. Professional Profile'\n      }\n    }, {\n      label: 'Start Playing',\n      title: {\n        base: 'Play',\n        sm: '3. Play',\n        md: '3. Start Playing'\n      }\n    }]);\n\n    _defineProperty(this, \"steps\", [{\n      label: 'Username',\n      slug: 'username',\n      sectionIndex: 0\n    }, {\n      label: 'Personality Type',\n      slug: 'personalityType',\n      sectionIndex: 0\n    }, {\n      label: 'Player Type',\n      slug: 'playerType',\n      sectionIndex: 0\n    }, {\n      label: 'Skills',\n      slug: 'skills',\n      sectionIndex: 1\n    }, {\n      label: 'Availability',\n      slug: 'availability',\n      sectionIndex: 1\n    }, {\n      label: 'Time Zone',\n      slug: 'timeZone',\n      sectionIndex: 1\n    }, {\n      label: 'Memberships',\n      slug: 'memberships',\n      sectionIndex: 1\n    }, {\n      label: 'Start Playing',\n      slug: 'complete',\n      sectionIndex: 2\n    }]);\n  }\n\n  _createClass(SetupOptions, [{\n    key: \"stepIndexMatchingSlug\",\n    value: function stepIndexMatchingSlug(slug) {\n      return this.steps.findIndex(function (step) {\n        return step.slug === slug;\n      });\n    }\n  }, {\n    key: \"isLastStep\",\n    value: function isLastStep(stepIndex) {\n      return stepIndex >= this.numSteps - 1;\n    }\n  }, {\n    key: \"isFinalStepOfSection\",\n    value: function isFinalStepOfSection(stepIndex) {\n      if (this.isLastStep(stepIndex)) return true;\n      return this.steps[stepIndex].sectionIndex !== this.steps[stepIndex + 1].sectionIndex;\n    }\n  }, {\n    key: \"progressWithinSection\",\n    value: function progressWithinSection(stepIndex) {\n      var stepSectionIndex = this.steps[stepIndex].sectionIndex;\n      var stepsCompletedInSection = 0;\n      var stepsInSection = this.steps.reduce(function (count, step, index) {\n        if (stepIndex === index) {\n          stepsCompletedInSection = count;\n        }\n\n        if (step.sectionIndex === stepSectionIndex) {\n          return count + 1;\n        }\n\n        return count;\n      }, 0);\n      return Math.floor((stepsCompletedInSection + 1) * 100.0) / stepsInSection;\n    }\n  }, {\n    key: \"numSteps\",\n    get: function get() {\n      return this.steps.length;\n    }\n  }]);\n\n  return SetupOptions;\n}();","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/utils/setupOptions.tsx"],"names":["SetupOptions","label","title","base","sm","lg","md","slug","sectionIndex","steps","findIndex","step","stepIndex","numSteps","isLastStep","stepSectionIndex","stepsCompletedInSection","stepsInSection","reduce","count","index","Math","floor","length"],"mappings":";;;AAaA,WAAaA,YAAb;AAAA;AAAA;;AAAA,sCAC6B,CACzB;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,EAAE,EAAE;AAAzB;AAFT,KADyB,EAKzB;AACEH,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,EAAE,EAAE,YAFC;AAGLC,QAAAA,EAAE,EAAE;AAHC;AAFT,KALyB,EAazB;AACEJ,MAAAA,KAAK,EAAE,eADT;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,EAAE,EAAE,SAFC;AAGLE,QAAAA,EAAE,EAAE;AAHC;AAFT,KAbyB,CAD7B;;AAAA,mCAwBuB,CACnB;AACEL,MAAAA,KAAK,EAAE,UADT;AAEEM,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KADmB,EAMnB;AACEP,MAAAA,KAAK,EAAE,kBADT;AAEEM,MAAAA,IAAI,EAAE,iBAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KANmB,EAWnB;AACEP,MAAAA,KAAK,EAAE,aADT;AAEEM,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KAXmB,EAgBnB;AACEP,MAAAA,KAAK,EAAE,QADT;AAEEM,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KAhBmB,EAqBnB;AACEP,MAAAA,KAAK,EAAE,cADT;AAEEM,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KArBmB,EA0BnB;AACEP,MAAAA,KAAK,EAAE,WADT;AAEEM,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KA1BmB,EA+BnB;AACEP,MAAAA,KAAK,EAAE,aADT;AAEEM,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KA/BmB,EAoCnB;AACEP,MAAAA,KAAK,EAAE,eADT;AAEEM,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KApCmB,CAxBvB;AAAA;;AAAA;AAAA;AAAA,0CAmEwBD,IAnExB,EAmEqD;AACjD,aAAO,KAAKE,KAAL,CAAWC,SAAX,CAAqB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACJ,IAAL,KAAcA,IAAxB;AAAA,OAArB,CAAP;AACD;AArEH;AAAA;AAAA,+BA2EaK,SA3Eb,EA2EyC;AACrC,aAAOA,SAAS,IAAI,KAAKC,QAAL,GAAgB,CAApC;AACD;AA7EH;AAAA;AAAA,yCA+EuBD,SA/EvB,EA+EmD;AAC/C,UAAI,KAAKE,UAAL,CAAgBF,SAAhB,CAAJ,EAAgC,OAAO,IAAP;AAChC,aACE,KAAKH,KAAL,CAAWG,SAAX,EAAsBJ,YAAtB,KACA,KAAKC,KAAL,CAAWG,SAAS,GAAG,CAAvB,EAA0BJ,YAF5B;AAID;AArFH;AAAA;AAAA,0CAuFwBI,SAvFxB,EAuFmD;AAC/C,UAAMG,gBAAgB,GAAG,KAAKN,KAAL,CAAWG,SAAX,EAAsBJ,YAA/C;AACA,UAAIQ,uBAAuB,GAAG,CAA9B;AACA,UAAMC,cAAc,GAAG,KAAKR,KAAL,CAAWS,MAAX,CACrB,UAACC,KAAD,EAAgBR,IAAhB,EAAiCS,KAAjC,EAAmD;AACjD,YAAIR,SAAS,KAAKQ,KAAlB,EAAyB;AACvBJ,UAAAA,uBAAuB,GAAGG,KAA1B;AACD;;AACD,YAAIR,IAAI,CAACH,YAAL,KAAsBO,gBAA1B,EAA4C;AAC1C,iBAAOI,KAAK,GAAG,CAAf;AACD;;AACD,eAAOA,KAAP;AACD,OAToB,EAUrB,CAVqB,CAAvB;AAYA,aAAOE,IAAI,CAACC,KAAL,CAAW,CAACN,uBAAuB,GAAG,CAA3B,IAAgC,KAA3C,IAAoDC,cAA3D;AACD;AAvGH;AAAA;AAAA,wBAuEyB;AACrB,aAAO,KAAKR,KAAL,CAAWc,MAAlB;AACD;AAzEH;;AAAA;AAAA","sourcesContent":["export type SetupStep = {\n  label: string;\n  slug?: string;\n  sectionIndex: number;\n};\n\nexport type SetupSection = {\n  label: string;\n  title: {\n    [any: string]: string | undefined;\n  };\n};\n\nexport class SetupOptions {\n  sections: SetupSection[] = [\n    {\n      label: 'About You',\n      title: { base: 'About You', sm: '1. About You' },\n    },\n    {\n      label: 'Profile',\n      title: {\n        base: 'Profile',\n        sm: '2. Profile',\n        lg: '2. Professional Profile',\n      },\n    },\n    {\n      label: 'Start Playing',\n      title: {\n        base: 'Play',\n        sm: '3. Play',\n        md: '3. Start Playing',\n      },\n    },\n  ];\n\n  steps: SetupStep[] = [\n    {\n      label: 'Username',\n      slug: 'username',\n      sectionIndex: 0,\n    },\n    {\n      label: 'Personality Type',\n      slug: 'personalityType',\n      sectionIndex: 0,\n    },\n    {\n      label: 'Player Type',\n      slug: 'playerType',\n      sectionIndex: 0,\n    },\n    {\n      label: 'Skills',\n      slug: 'skills',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Availability',\n      slug: 'availability',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Time Zone',\n      slug: 'timeZone',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Memberships',\n      slug: 'memberships',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Start Playing',\n      slug: 'complete',\n      sectionIndex: 2,\n    },\n  ];\n\n  stepIndexMatchingSlug(slug: string | null): number {\n    return this.steps.findIndex((step) => step.slug === slug);\n  }\n\n  get numSteps(): number {\n    return this.steps.length;\n  }\n\n  isLastStep(stepIndex: number): boolean {\n    return stepIndex >= this.numSteps - 1;\n  }\n\n  isFinalStepOfSection(stepIndex: number): boolean {\n    if (this.isLastStep(stepIndex)) return true;\n    return (\n      this.steps[stepIndex].sectionIndex !==\n      this.steps[stepIndex + 1].sectionIndex\n    );\n  }\n\n  progressWithinSection(stepIndex: number): number {\n    const stepSectionIndex = this.steps[stepIndex].sectionIndex;\n    let stepsCompletedInSection = 0;\n    const stepsInSection = this.steps.reduce(\n      (count: number, step: SetupStep, index: number) => {\n        if (stepIndex === index) {\n          stepsCompletedInSection = count;\n        }\n        if (step.sectionIndex === stepSectionIndex) {\n          return count + 1;\n        }\n        return count;\n      },\n      0,\n    );\n    return Math.floor((stepsCompletedInSection + 1) * 100.0) / stepsInSection;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}