{"ast":null,"code":"import _slicedToArray from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Web3Context } from 'contexts/Web3Context';\nimport { useGetMeQuery } from 'graphql/autogen/types';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect } from 'react';\nexport var useWeb3 = function useWeb3() {\n  _s();\n\n  return useContext(Web3Context);\n};\n\n_s(useWeb3, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport var useUser = function useUser() {\n  _s2();\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      redirectTo = _ref.redirectTo,\n      redirectIfFound = _ref.redirectIfFound;\n\n  var _useWeb = useWeb3(),\n      authToken = _useWeb.authToken;\n\n  var router = useRouter();\n\n  var _useGetMeQuery = useGetMeQuery({\n    pause: !authToken\n  }),\n      _useGetMeQuery2 = _slicedToArray(_useGetMeQuery, 1),\n      _useGetMeQuery2$ = _useGetMeQuery2[0],\n      data = _useGetMeQuery2$.data,\n      error = _useGetMeQuery2$.error,\n      fetching = _useGetMeQuery2$.fetching;\n\n  var me = data === null || data === void 0 ? void 0 : data.me[0];\n  var user = error || !authToken || !me ? null : me;\n  useEffect(function () {\n    if (!redirectTo) return;\n\n    if ( // If redirectTo is set, redirect if the user was not found.\n    redirectTo && !redirectIfFound && !user || // If redirectIfFound is also set, redirect if the user was found\n    redirectIfFound && user) {\n      router.push(redirectTo);\n    }\n  }, [router, user, redirectIfFound, redirectTo]);\n  return {\n    user: user,\n    fetching: fetching\n  };\n};\n\n_s2(useUser, \"17xcmgfzyNf7vln79qpqOqkkrlY=\", false, function () {\n  return [useWeb3, useRouter, useGetMeQuery];\n});\n\nexport var useMounted = function useMounted() {\n  _s3();\n\n  // https://www.joshwcomeau.com/react/the-perils-of-rehydration/\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasMounted = _React$useState2[0],\n      setHasMounted = _React$useState2[1];\n\n  React.useEffect(function () {\n    setHasMounted(true);\n  }, []);\n  return hasMounted;\n};\n\n_s3(useMounted, \"aiSd/DQPOnbbLLZZL0Xv/KtPBDg=\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/lib/hooks/index.ts"],"names":["Web3Context","useGetMeQuery","useRouter","React","useContext","useEffect","useWeb3","useUser","redirectTo","redirectIfFound","authToken","router","pause","data","error","fetching","me","user","push","useMounted","useState","hasMounted","setHasMounted"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA6C,sBAA7C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA,SAAuBF,UAAU,CAACJ,WAAD,CAAjC;AAAA,CAAhB;;GAAMM,O;;AAOb,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAGlB;AAAA;;AAAA,iFAHkE,EAGlE;AAAA,MAHqBC,UAGrB,QAHqBA,UAGrB;AAAA,MAHiCC,eAGjC,QAHiCA,eAGjC;;AAAA,gBACmBH,OAAO,EAD1B;AAAA,MACKI,SADL,WACKA,SADL;;AAEH,MAAMC,MAAM,GAAGT,SAAS,EAAxB;;AAFG,uBAIiCD,aAAa,CAAC;AAChDW,IAAAA,KAAK,EAAE,CAACF;AADwC,GAAD,CAJ9C;AAAA;AAAA;AAAA,MAIMG,IAJN,oBAIMA,IAJN;AAAA,MAIYC,KAJZ,oBAIYA,KAJZ;AAAA,MAImBC,QAJnB,oBAImBA,QAJnB;;AAOH,MAAMC,EAAE,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,EAAN,CAAS,CAAT,CAAX;AACA,MAAMC,IAAI,GAAGH,KAAK,IAAI,CAACJ,SAAV,IAAuB,CAACM,EAAxB,GAA6B,IAA7B,GAAoCA,EAAjD;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACG,UAAL,EAAiB;;AAEjB,SACE;AACCA,IAAAA,UAAU,IAAI,CAACC,eAAf,IAAkC,CAACQ,IAApC,IACA;AACCR,IAAAA,eAAe,IAAIQ,IAJtB,EAKE;AACAN,MAAAA,MAAM,CAACO,IAAP,CAAYV,UAAZ;AACD;AACF,GAXQ,EAWN,CAACG,MAAD,EAASM,IAAT,EAAeR,eAAf,EAAgCD,UAAhC,CAXM,CAAT;AAaA,SAAO;AAAES,IAAAA,IAAI,EAAJA,IAAF;AAAQF,IAAAA,QAAQ,EAARA;AAAR,GAAP;AACD,CA3BM;;IAAMR,O;UAIWD,O,EACPJ,S,EAEqBD,a;;;AAsBtC,OAAO,IAAMkB,UAAU,GAAG,SAAbA,UAAa,GAAe;AAAA;;AACvC;AADuC,wBAEHhB,KAAK,CAACiB,QAAN,CAAe,KAAf,CAFG;AAAA;AAAA,MAEhCC,UAFgC;AAAA,MAEpBC,aAFoB;;AAGvCnB,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AACpBiB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD,EAEG,EAFH;AAGA,SAAOD,UAAP;AACD,CAPM;;IAAMF,U","sourcesContent":["import { Web3Context, Web3ContextType } from 'contexts/Web3Context';\nimport { useGetMeQuery } from 'graphql/autogen/types';\nimport { MeType } from 'graphql/types';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect } from 'react';\n\nexport const useWeb3 = (): Web3ContextType => useContext(Web3Context);\n\ntype UseUserOpts = {\n  redirectTo?: string;\n  redirectIfFound?: boolean;\n};\n\nexport const useUser = ({ redirectTo, redirectIfFound }: UseUserOpts = {}): {\n  user: MeType | null;\n  fetching: boolean;\n} => {\n  const { authToken } = useWeb3();\n  const router = useRouter();\n\n  const [{ data, error, fetching }] = useGetMeQuery({\n    pause: !authToken,\n  });\n  const me = data?.me[0];\n  const user = error || !authToken || !me ? null : me;\n\n  useEffect(() => {\n    if (!redirectTo) return;\n\n    if (\n      // If redirectTo is set, redirect if the user was not found.\n      (redirectTo && !redirectIfFound && !user) ||\n      // If redirectIfFound is also set, redirect if the user was found\n      (redirectIfFound && user)\n    ) {\n      router.push(redirectTo);\n    }\n  }, [router, user, redirectIfFound, redirectTo]);\n\n  return { user, fetching };\n};\n\nexport const useMounted = (): boolean => {\n  // https://www.joshwcomeau.com/react/the-perils-of-rehydration/\n  const [hasMounted, setHasMounted] = React.useState(false);\n  React.useEffect(() => {\n    setHasMounted(true);\n  }, []);\n  return hasMounted;\n};\n"]},"metadata":{},"sourceType":"module"}