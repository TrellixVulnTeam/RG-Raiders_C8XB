{"ast":null,"code":"import { Web3Context } from 'contexts/Web3Context';\nimport { useGetMeQuery } from 'graphql/autogen/types';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect } from 'react';\nexport const useWeb3 = () => useContext(Web3Context);\nexport const useUser = ({\n  redirectTo,\n  redirectIfFound\n} = {}) => {\n  const {\n    authToken\n  } = useWeb3();\n  const router = useRouter();\n  const [{\n    data,\n    error,\n    fetching\n  }] = useGetMeQuery({\n    pause: !authToken\n  });\n  const me = data === null || data === void 0 ? void 0 : data.me[0];\n  const user = error || !authToken || !me ? null : me;\n  useEffect(() => {\n    if (!redirectTo) return;\n\n    if ( // If redirectTo is set, redirect if the user was not found.\n    redirectTo && !redirectIfFound && !user || // If redirectIfFound is also set, redirect if the user was found\n    redirectIfFound && user) {\n      router.push(redirectTo);\n    }\n  }, [router, user, redirectIfFound, redirectTo]);\n  return {\n    user,\n    fetching\n  };\n};\nexport const useMounted = () => {\n  // https://www.joshwcomeau.com/react/the-perils-of-rehydration/\n  const [hasMounted, setHasMounted] = React.useState(false);\n  React.useEffect(() => {\n    setHasMounted(true);\n  }, []);\n  return hasMounted;\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/lib/hooks/index.ts"],"names":["Web3Context","useGetMeQuery","useRouter","React","useContext","useEffect","useWeb3","useUser","redirectTo","redirectIfFound","authToken","router","data","error","fetching","pause","me","user","push","useMounted","hasMounted","setHasMounted","useState"],"mappings":"AAAA,SAASA,WAAT,QAA6C,sBAA7C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAuBF,UAAU,CAACJ,WAAD,CAAjD;AAOP,OAAO,MAAMO,OAAO,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAA+C,EAAhD,KAGlB;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,OAAO,EAA7B;AACA,QAAMK,MAAM,GAAGT,SAAS,EAAxB;AAEA,QAAM,CAAC;AAAEU,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,IAA8Bb,aAAa,CAAC;AAChDc,IAAAA,KAAK,EAAE,CAACL;AADwC,GAAD,CAAjD;AAGA,QAAMM,EAAE,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,EAAN,CAAS,CAAT,CAAX;AACA,QAAMC,IAAI,GAAGJ,KAAK,IAAI,CAACH,SAAV,IAAuB,CAACM,EAAxB,GAA6B,IAA7B,GAAoCA,EAAjD;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,UAAL,EAAiB;;AAEjB,SACE;AACCA,IAAAA,UAAU,IAAI,CAACC,eAAf,IAAkC,CAACQ,IAApC,IACA;AACCR,IAAAA,eAAe,IAAIQ,IAJtB,EAKE;AACAN,MAAAA,MAAM,CAACO,IAAP,CAAYV,UAAZ;AACD;AACF,GAXQ,EAWN,CAACG,MAAD,EAASM,IAAT,EAAeR,eAAf,EAAgCD,UAAhC,CAXM,CAAT;AAaA,SAAO;AAAES,IAAAA,IAAF;AAAQH,IAAAA;AAAR,GAAP;AACD,CA3BM;AA6BP,OAAO,MAAMK,UAAU,GAAG,MAAe;AACvC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAApC;AACAnB,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBgB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD,EAEG,EAFH;AAGA,SAAOD,UAAP;AACD,CAPM","sourcesContent":["import { Web3Context, Web3ContextType } from 'contexts/Web3Context';\nimport { useGetMeQuery } from 'graphql/autogen/types';\nimport { MeType } from 'graphql/types';\nimport { useRouter } from 'next/router';\nimport React, { useContext, useEffect } from 'react';\n\nexport const useWeb3 = (): Web3ContextType => useContext(Web3Context);\n\ntype UseUserOpts = {\n  redirectTo?: string;\n  redirectIfFound?: boolean;\n};\n\nexport const useUser = ({ redirectTo, redirectIfFound }: UseUserOpts = {}): {\n  user: MeType | null;\n  fetching: boolean;\n} => {\n  const { authToken } = useWeb3();\n  const router = useRouter();\n\n  const [{ data, error, fetching }] = useGetMeQuery({\n    pause: !authToken,\n  });\n  const me = data?.me[0];\n  const user = error || !authToken || !me ? null : me;\n\n  useEffect(() => {\n    if (!redirectTo) return;\n\n    if (\n      // If redirectTo is set, redirect if the user was not found.\n      (redirectTo && !redirectIfFound && !user) ||\n      // If redirectIfFound is also set, redirect if the user was found\n      (redirectIfFound && user)\n    ) {\n      router.push(redirectTo);\n    }\n  }, [router, user, redirectIfFound, redirectTo]);\n\n  return { user, fetching };\n};\n\nexport const useMounted = (): boolean => {\n  // https://www.joshwcomeau.com/react/the-perils-of-rehydration/\n  const [hasMounted, setHasMounted] = React.useState(false);\n  React.useEffect(() => {\n    setHasMounted(true);\n  }, []);\n  return hasMounted;\n};\n"]},"metadata":{},"sourceType":"module"}