{"ast":null,"code":"import _extends from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/profile/setup/personalityType.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { SetupPersonalityType } from 'components/Setup/SetupPersonalityType';\nimport { SetupProfile } from 'components/Setup/SetupProfile';\nimport { SetupContextProvider } from 'contexts/SetupContext';\nimport { useUser } from 'lib/hooks';\nimport React, { useEffect, useState } from 'react';\n\nvar PersonalityTypeSetup = function PersonalityTypeSetup(props) {\n  _s();\n\n  var _user$player, _user$player$ColorAsp;\n\n  var personalityTypes = props.personalityTypes;\n\n  var _useUser = useUser({\n    redirectTo: '/'\n  }),\n      user = _useUser.user;\n\n  var _useState = useState(user === null || user === void 0 ? void 0 : (_user$player = user.player) === null || _user$player === void 0 ? void 0 : (_user$player$ColorAsp = _user$player.ColorAspect) === null || _user$player$ColorAsp === void 0 ? void 0 : _user$player$ColorAsp.mask),\n      colorMask = _useState[0],\n      setColorMask = _useState[1];\n\n  var load = function load() {\n    var _ref = user !== null && user !== void 0 ? user : {},\n        player = _ref.player;\n\n    if (player) {\n      if (colorMask === undefined && player.ColorAspect !== null) {\n        var _player$ColorAspect;\n\n        setColorMask((_player$ColorAspect = player.ColorAspect) === null || _player$ColorAspect === void 0 ? void 0 : _player$ColorAspect.mask);\n      }\n    }\n  };\n\n  useEffect(load, [user, colorMask]);\n  return __jsx(SetupContextProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(SetupProfile, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(SetupPersonalityType, _extends({\n    personalityTypes: personalityTypes,\n    colorMask: colorMask,\n    setColorMask: setColorMask\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }))));\n};\n\n_s(PersonalityTypeSetup, \"JVJCdunsFHyUFsWhw5iN0kbR8+o=\", false, function () {\n  return [useUser];\n});\n\n_c = PersonalityTypeSetup;\nexport var __N_SSG = true;\nexport default PersonalityTypeSetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalityTypeSetup\");","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/pages/profile/setup/personalityType.tsx"],"names":["SetupPersonalityType","SetupProfile","SetupContextProvider","useUser","React","useEffect","useState","PersonalityTypeSetup","props","personalityTypes","redirectTo","user","player","ColorAspect","mask","colorMask","setColorMask","load","undefined"],"mappings":";;;;;;;AAAA,SAASA,oBAAT,QAAqC,uCAArC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,oBAAT,QAAqC,uBAArC;AAEA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAmBA,IAAMC,oBAAqC,GAAG,SAAxCA,oBAAwC,CAACC,KAAD,EAAW;AAAA;;AAAA;;AAAA,MAC/CC,gBAD+C,GAC1BD,KAD0B,CAC/CC,gBAD+C;;AAAA,iBAEtCN,OAAO,CAAC;AAAEO,IAAAA,UAAU,EAAE;AAAd,GAAD,CAF+B;AAAA,MAE/CC,IAF+C,YAE/CA,IAF+C;;AAAA,kBAGrBL,QAAQ,CACxCK,IADwC,aACxCA,IADwC,uCACxCA,IAAI,CAAEC,MADkC,0EACxC,aAAcC,WAD0B,0DACxC,sBAA2BC,IADa,CAHa;AAAA,MAGhDC,SAHgD;AAAA,MAGrCC,YAHqC;;AAOvD,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,eACEN,IADF,aACEA,IADF,cACEA,IADF,GACU,EADV;AAAA,QACTC,MADS,QACTA,MADS;;AAEjB,QAAIA,MAAJ,EAAY;AACV,UAAIG,SAAS,KAAKG,SAAd,IAA2BN,MAAM,CAACC,WAAP,KAAuB,IAAtD,EAA4D;AAAA;;AAC1DG,QAAAA,YAAY,wBAACJ,MAAM,CAACC,WAAR,wDAAC,oBAAoBC,IAArB,CAAZ;AACD;AACF;AACF,GAPD;;AAQAT,EAAAA,SAAS,CAACY,IAAD,EAAO,CAACN,IAAD,EAAOI,SAAP,CAAP,CAAT;AAEA,SACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD,WACM;AACFN,IAAAA,gBAAgB,EAAhBA,gBADE;AAEFM,IAAAA,SAAS,EAATA,SAFE;AAGFC,IAAAA,YAAY,EAAZA;AAHE,GADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAaD,CA9BD;;GAAMT,oB;UAEaJ,O;;;KAFbI,oB;;AA+BN,eAAeA,oBAAf","sourcesContent":["import { SetupPersonalityType } from 'components/Setup/SetupPersonalityType';\nimport { SetupProfile } from 'components/Setup/SetupProfile';\nimport { SetupContextProvider } from 'contexts/SetupContext';\nimport { getPersonalityInfo } from 'graphql/getPersonalityInfo';\nimport { useUser } from 'lib/hooks';\nimport { InferGetStaticPropsType } from 'next';\nimport React, { useEffect, useState } from 'react';\n\nexport const getStaticProps = async () => {\n  const {\n    types: personalityTypes,\n    parts: personalityParts,\n  } = await getPersonalityInfo();\n\n  return {\n    props: {\n      personalityParts,\n      personalityTypes,\n      hideAppDrawer: true,\n    },\n  };\n};\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>;\n\nconst PersonalityTypeSetup: React.FC<Props> = (props) => {\n  const { personalityTypes } = props;\n  const { user } = useUser({ redirectTo: '/' });\n  const [colorMask, setColorMask] = useState<number | undefined>(\n    user?.player?.ColorAspect?.mask,\n  );\n\n  const load = () => {\n    const { player } = user ?? {};\n    if (player) {\n      if (colorMask === undefined && player.ColorAspect !== null) {\n        setColorMask(player.ColorAspect?.mask);\n      }\n    }\n  };\n  useEffect(load, [user, colorMask]);\n\n  return (\n    <SetupContextProvider>\n      <SetupProfile>\n        <SetupPersonalityType\n          {...{\n            personalityTypes,\n            colorMask,\n            setColorMask,\n          }}\n        />\n      </SetupProfile>\n    </SetupContextProvider>\n  );\n};\nexport default PersonalityTypeSetup;\n"]},"metadata":{},"sourceType":"module"}