{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport class SetupOptions {\n  constructor() {\n    _defineProperty(this, \"sections\", [{\n      label: 'About You',\n      title: {\n        base: 'About You',\n        sm: '1. About You'\n      }\n    }, {\n      label: 'Profile',\n      title: {\n        base: 'Profile',\n        sm: '2. Profile',\n        lg: '2. Professional Profile'\n      }\n    }, {\n      label: 'Start Playing',\n      title: {\n        base: 'Play',\n        sm: '3. Play',\n        md: '3. Start Playing'\n      }\n    }]);\n\n    _defineProperty(this, \"steps\", [{\n      label: 'Username',\n      slug: 'username',\n      sectionIndex: 0\n    }, {\n      label: 'Personality Type',\n      slug: 'personalityType',\n      sectionIndex: 0\n    }, {\n      label: 'Player Type',\n      slug: 'playerType',\n      sectionIndex: 0\n    }, {\n      label: 'Skills',\n      slug: 'skills',\n      sectionIndex: 1\n    }, {\n      label: 'Availability',\n      slug: 'availability',\n      sectionIndex: 1\n    }, {\n      label: 'Time Zone',\n      slug: 'timeZone',\n      sectionIndex: 1\n    }, {\n      label: 'Memberships',\n      slug: 'memberships',\n      sectionIndex: 1\n    }, {\n      label: 'Start Playing',\n      slug: 'complete',\n      sectionIndex: 2\n    }]);\n  }\n\n  stepIndexMatchingSlug(slug) {\n    return this.steps.findIndex(step => step.slug === slug);\n  }\n\n  get numSteps() {\n    return this.steps.length;\n  }\n\n  isLastStep(stepIndex) {\n    return stepIndex >= this.numSteps - 1;\n  }\n\n  isFinalStepOfSection(stepIndex) {\n    if (this.isLastStep(stepIndex)) return true;\n    return this.steps[stepIndex].sectionIndex !== this.steps[stepIndex + 1].sectionIndex;\n  }\n\n  progressWithinSection(stepIndex) {\n    const stepSectionIndex = this.steps[stepIndex].sectionIndex;\n    let stepsCompletedInSection = 0;\n    const stepsInSection = this.steps.reduce((count, step, index) => {\n      if (stepIndex === index) {\n        stepsCompletedInSection = count;\n      }\n\n      if (step.sectionIndex === stepSectionIndex) {\n        return count + 1;\n      }\n\n      return count;\n    }, 0);\n    return Math.floor((stepsCompletedInSection + 1) * 100.0) / stepsInSection;\n  }\n\n}","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/utils/setupOptions.tsx"],"names":["SetupOptions","label","title","base","sm","lg","md","slug","sectionIndex","stepIndexMatchingSlug","steps","findIndex","step","numSteps","length","isLastStep","stepIndex","isFinalStepOfSection","progressWithinSection","stepSectionIndex","stepsCompletedInSection","stepsInSection","reduce","count","index","Math","floor"],"mappings":";;AAaA,OAAO,MAAMA,YAAN,CAAmB;AAAA;AAAA,sCACG,CACzB;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,EAAE,EAAE;AAAzB;AAFT,KADyB,EAKzB;AACEH,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,EAAE,EAAE,YAFC;AAGLC,QAAAA,EAAE,EAAE;AAHC;AAFT,KALyB,EAazB;AACEJ,MAAAA,KAAK,EAAE,eADT;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,EAAE,EAAE,SAFC;AAGLE,QAAAA,EAAE,EAAE;AAHC;AAFT,KAbyB,CADH;;AAAA,mCAwBH,CACnB;AACEL,MAAAA,KAAK,EAAE,UADT;AAEEM,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KADmB,EAMnB;AACEP,MAAAA,KAAK,EAAE,kBADT;AAEEM,MAAAA,IAAI,EAAE,iBAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KANmB,EAWnB;AACEP,MAAAA,KAAK,EAAE,aADT;AAEEM,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KAXmB,EAgBnB;AACEP,MAAAA,KAAK,EAAE,QADT;AAEEM,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KAhBmB,EAqBnB;AACEP,MAAAA,KAAK,EAAE,cADT;AAEEM,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KArBmB,EA0BnB;AACEP,MAAAA,KAAK,EAAE,WADT;AAEEM,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KA1BmB,EA+BnB;AACEP,MAAAA,KAAK,EAAE,aADT;AAEEM,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KA/BmB,EAoCnB;AACEP,MAAAA,KAAK,EAAE,eADT;AAEEM,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,YAAY,EAAE;AAHhB,KApCmB,CAxBG;AAAA;;AAmExBC,EAAAA,qBAAqB,CAACF,IAAD,EAA8B;AACjD,WAAO,KAAKG,KAAL,CAAWC,SAAX,CAAsBC,IAAD,IAAUA,IAAI,CAACL,IAAL,KAAcA,IAA7C,CAAP;AACD;;AAED,MAAIM,QAAJ,GAAuB;AACrB,WAAO,KAAKH,KAAL,CAAWI,MAAlB;AACD;;AAEDC,EAAAA,UAAU,CAACC,SAAD,EAA6B;AACrC,WAAOA,SAAS,IAAI,KAAKH,QAAL,GAAgB,CAApC;AACD;;AAEDI,EAAAA,oBAAoB,CAACD,SAAD,EAA6B;AAC/C,QAAI,KAAKD,UAAL,CAAgBC,SAAhB,CAAJ,EAAgC,OAAO,IAAP;AAChC,WACE,KAAKN,KAAL,CAAWM,SAAX,EAAsBR,YAAtB,KACA,KAAKE,KAAL,CAAWM,SAAS,GAAG,CAAvB,EAA0BR,YAF5B;AAID;;AAEDU,EAAAA,qBAAqB,CAACF,SAAD,EAA4B;AAC/C,UAAMG,gBAAgB,GAAG,KAAKT,KAAL,CAAWM,SAAX,EAAsBR,YAA/C;AACA,QAAIY,uBAAuB,GAAG,CAA9B;AACA,UAAMC,cAAc,GAAG,KAAKX,KAAL,CAAWY,MAAX,CACrB,CAACC,KAAD,EAAgBX,IAAhB,EAAiCY,KAAjC,KAAmD;AACjD,UAAIR,SAAS,KAAKQ,KAAlB,EAAyB;AACvBJ,QAAAA,uBAAuB,GAAGG,KAA1B;AACD;;AACD,UAAIX,IAAI,CAACJ,YAAL,KAAsBW,gBAA1B,EAA4C;AAC1C,eAAOI,KAAK,GAAG,CAAf;AACD;;AACD,aAAOA,KAAP;AACD,KAToB,EAUrB,CAVqB,CAAvB;AAYA,WAAOE,IAAI,CAACC,KAAL,CAAW,CAACN,uBAAuB,GAAG,CAA3B,IAAgC,KAA3C,IAAoDC,cAA3D;AACD;;AAvGuB","sourcesContent":["export type SetupStep = {\n  label: string;\n  slug?: string;\n  sectionIndex: number;\n};\n\nexport type SetupSection = {\n  label: string;\n  title: {\n    [any: string]: string | undefined;\n  };\n};\n\nexport class SetupOptions {\n  sections: SetupSection[] = [\n    {\n      label: 'About You',\n      title: { base: 'About You', sm: '1. About You' },\n    },\n    {\n      label: 'Profile',\n      title: {\n        base: 'Profile',\n        sm: '2. Profile',\n        lg: '2. Professional Profile',\n      },\n    },\n    {\n      label: 'Start Playing',\n      title: {\n        base: 'Play',\n        sm: '3. Play',\n        md: '3. Start Playing',\n      },\n    },\n  ];\n\n  steps: SetupStep[] = [\n    {\n      label: 'Username',\n      slug: 'username',\n      sectionIndex: 0,\n    },\n    {\n      label: 'Personality Type',\n      slug: 'personalityType',\n      sectionIndex: 0,\n    },\n    {\n      label: 'Player Type',\n      slug: 'playerType',\n      sectionIndex: 0,\n    },\n    {\n      label: 'Skills',\n      slug: 'skills',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Availability',\n      slug: 'availability',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Time Zone',\n      slug: 'timeZone',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Memberships',\n      slug: 'memberships',\n      sectionIndex: 1,\n    },\n    {\n      label: 'Start Playing',\n      slug: 'complete',\n      sectionIndex: 2,\n    },\n  ];\n\n  stepIndexMatchingSlug(slug: string | null): number {\n    return this.steps.findIndex((step) => step.slug === slug);\n  }\n\n  get numSteps(): number {\n    return this.steps.length;\n  }\n\n  isLastStep(stepIndex: number): boolean {\n    return stepIndex >= this.numSteps - 1;\n  }\n\n  isFinalStepOfSection(stepIndex: number): boolean {\n    if (this.isLastStep(stepIndex)) return true;\n    return (\n      this.steps[stepIndex].sectionIndex !==\n      this.steps[stepIndex + 1].sectionIndex\n    );\n  }\n\n  progressWithinSection(stepIndex: number): number {\n    const stepSectionIndex = this.steps[stepIndex].sectionIndex;\n    let stepsCompletedInSection = 0;\n    const stepsInSection = this.steps.reduce(\n      (count: number, step: SetupStep, index: number) => {\n        if (stepIndex === index) {\n          stepsCompletedInSection = count;\n        }\n        if (step.sectionIndex === stepSectionIndex) {\n          return count + 1;\n        }\n        return count;\n      },\n      0,\n    );\n    return Math.floor((stepsCompletedInSection + 1) * 100.0) / stepsInSection;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}