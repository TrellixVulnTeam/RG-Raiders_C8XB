{"ast":null,"code":"import BackgroundImage from 'assets/tile-background.jpg';\nimport { ethers } from 'ethers';\nexport var getPlayerImage = function getPlayerImage(player) {\n  var _player$profile_cache;\n\n  return ((_player$profile_cache = player.profile_cache) === null || _player$profile_cache === void 0 ? void 0 : _player$profile_cache.imageURL) || \"https://avatars.dicebear.com/api/jdenticon/\".concat(player.username, \".svg\");\n};\nexport var getPlayerCoverImage = function getPlayerCoverImage(player) {\n  var _player$profile_cache2;\n\n  return ((_player$profile_cache2 = player.profile_cache) === null || _player$profile_cache2 === void 0 ? void 0 : _player$profile_cache2.backgroundImageURL) || BackgroundImage;\n};\nexport var getPlayerName = function getPlayerName(player) {\n  var _player$profile_cache3;\n\n  return ((_player$profile_cache3 = player.profile_cache) === null || _player$profile_cache3 === void 0 ? void 0 : _player$profile_cache3.name) || formatUsernameIfAddress(player.username);\n};\nexport var getPlayerDescription = function getPlayerDescription(player) {\n  var _player$profile_cache4;\n\n  return ((_player$profile_cache4 = player.profile_cache) === null || _player$profile_cache4 === void 0 ? void 0 : _player$profile_cache4.description) || '';\n};\nexport var formatAddress = function formatAddress() {\n  var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return \"\".concat(address.slice(0, 6), \"...\").concat(address.slice(-4));\n};\nexport var formatUsernameIfAddress = function formatUsernameIfAddress() {\n  var username = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return ethers.utils.isAddress(username) ? formatAddress(username) : username;\n};\nexport var hasPlayerImage = function hasPlayerImage(player) {\n  var _player$profile_cache5;\n\n  return !!((_player$profile_cache5 = player.profile_cache) !== null && _player$profile_cache5 !== void 0 && _player$profile_cache5.imageURL);\n};","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/utils/playerHelpers.ts"],"names":["BackgroundImage","ethers","getPlayerImage","player","profile_cache","imageURL","username","getPlayerCoverImage","backgroundImageURL","getPlayerName","name","formatUsernameIfAddress","getPlayerDescription","description","formatAddress","address","slice","utils","isAddress","hasPlayerImage"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,4BAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAIA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA;;AAAA,SAC5B,0BAAAA,MAAM,CAACC,aAAP,gFAAsBC,QAAtB,0DAC8CF,MAAM,CAACG,QADrD,SAD4B;AAAA,CAAvB;AAGP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,MAAD;AAAA;;AAAA,SACjC,2BAAAA,MAAM,CAACC,aAAP,kFAAsBI,kBAAtB,KAA4CR,eADX;AAAA,CAA5B;AAGP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACN,MAAD;AAAA;;AAAA,SAC3B,2BAAAA,MAAM,CAACC,aAAP,kFAAsBM,IAAtB,KAA8BC,uBAAuB,CAACR,MAAM,CAACG,QAAR,CAD1B;AAAA,CAAtB;AAGP,OAAO,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACT,MAAD;AAAA;;AAAA,SAClC,2BAAAA,MAAM,CAACC,aAAP,kFAAsBS,WAAtB,KAAqC,EADH;AAAA,CAA7B;AAGP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAACC,OAAD,uEAAW,EAAX;AAAA,mBACxBA,OAAO,CAACC,KAAR,CAAc,CAAd,EAAiB,CAAjB,CADwB,gBACCD,OAAO,CAACC,KAAR,CAAc,CAAC,CAAf,CADD;AAAA,CAAtB;AAGP,OAAO,IAAML,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,MAACL,QAAD,uEAAY,EAAZ;AAAA,SACrCL,MAAM,CAACgB,KAAP,CAAaC,SAAb,CAAuBZ,QAAvB,IAAmCQ,aAAa,CAACR,QAAD,CAAhD,GAA6DA,QADxB;AAAA,CAAhC;AAGP,OAAO,IAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAAChB,MAAD;AAAA;;AAAA,SAC5B,CAAC,4BAACA,MAAM,CAACC,aAAR,mDAAC,uBAAsBC,QAAvB,CAD2B;AAAA,CAAvB","sourcesContent":["import BackgroundImage from 'assets/tile-background.jpg';\nimport { ethers } from 'ethers';\n\nimport { PlayerFragmentFragment } from '../graphql/autogen/types';\n\nexport const getPlayerImage = (player: PlayerFragmentFragment): string =>\n  player.profile_cache?.imageURL ||\n  `https://avatars.dicebear.com/api/jdenticon/${player.username}.svg`;\nexport const getPlayerCoverImage = (player: PlayerFragmentFragment): string =>\n  player.profile_cache?.backgroundImageURL || BackgroundImage;\n\nexport const getPlayerName = (player: PlayerFragmentFragment): string =>\n  player.profile_cache?.name || formatUsernameIfAddress(player.username);\n\nexport const getPlayerDescription = (player: PlayerFragmentFragment): string =>\n  player.profile_cache?.description || '';\n\nexport const formatAddress = (address = ''): string =>\n  `${address.slice(0, 6)}...${address.slice(-4)}`;\n\nexport const formatUsernameIfAddress = (username = ''): string =>\n  ethers.utils.isAddress(username) ? formatAddress(username) : username;\n\nexport const hasPlayerImage = (player: PlayerFragmentFragment): boolean =>\n  !!player.profile_cache?.imageURL;\n"]},"metadata":{},"sourceType":"module"}