{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mark.wagner/Dropbox/projects/TheGame/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nimport React from 'react';\nimport Select from 'react-select';\nimport spacetime from 'spacetime';\nimport { display } from 'spacetime-informal';\nexport var i18nTimezones = {\n  'Pacific/Midway': 'Midway Island, Samoa',\n  'Pacific/Honolulu': 'Hawaii',\n  'America/Juneau': 'Alaska',\n  'America/Boise': 'Mountain Time',\n  'America/Dawson': 'Dawson, Yukon',\n  'America/Chihuahua': 'Chihuahua, La Paz, Mazatlan',\n  'America/Phoenix': 'Arizona',\n  'America/Chicago': 'Central Time',\n  'America/Regina': 'Saskatchewan',\n  'America/Mexico_City': 'Guadalajara, Mexico City, Monterrey',\n  'America/Belize': 'Central America',\n  'America/Detroit': 'Eastern Time',\n  'America/Bogota': 'Bogota, Lima, Quito',\n  'America/Caracas': 'Caracas, La Paz',\n  'America/Santiago': 'Santiago',\n  'America/St_Johns': 'Newfoundland and Labrador',\n  'America/Sao_Paulo': 'Brasilia',\n  'America/Tijuana': 'Tijuana, Pacific Time',\n  'America/Argentina/Buenos_Aires': 'Buenos Aires, Georgetown',\n  'America/Godthab': 'Greenland',\n  'Atlantic/Azores': 'Azores',\n  'Atlantic/Cape_Verde': 'Cape Verde Islands',\n  GMT: 'UTC',\n  'Europe/London': 'Edinburgh, London',\n  'Europe/Dublin': 'Dublin',\n  'Europe/Lisbon': 'Lisbon',\n  'Africa/Casablanca': 'Casablanca, Monrovia',\n  'Atlantic/Canary': 'Canary Islands',\n  'Europe/Belgrade': 'Belgrade, Bratislava, Budapest, Ljubljana, Prague',\n  'Europe/Sarajevo': 'Sarajevo, Skopje, Warsaw, Zagreb',\n  'Europe/Brussels': 'Brussels, Copenhagen, Madrid, Paris',\n  'Europe/Amsterdam': 'Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',\n  'Africa/Algiers': 'West Central Africa',\n  'Europe/Bucharest': 'Bucharest',\n  'Africa/Cairo': 'Cairo',\n  'Europe/Helsinki': 'Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius',\n  'Europe/Athens': 'Athens, Istanbul, Minsk',\n  'Asia/Jerusalem': 'Jerusalem',\n  'Africa/Harare': 'Harare, Pretoria',\n  'Europe/Moscow': 'Moscow, St. Petersburg, Volgograd',\n  'Asia/Kuwait': 'Kuwait, Riyadh',\n  'Africa/Nairobi': 'Nairobi',\n  'Asia/Baghdad': 'Baghdad',\n  'Asia/Tehran': 'Tehran',\n  'Asia/Dubai': 'Abu Dhabi, Muscat',\n  'Asia/Baku': 'Baku, Tbilisi, Yerevan',\n  'Asia/Kabul': 'Kabul',\n  'Asia/Yekaterinburg': 'Ekaterinburg',\n  'Asia/Karachi': 'Islamabad, Karachi, Tashkent',\n  'Asia/Kolkata': 'Chennai, Kolkata, Mumbai, New Delhi',\n  'Asia/Kathmandu': 'Kathmandu',\n  'Asia/Dhaka': 'Astana, Dhaka',\n  'Asia/Colombo': 'Sri Jayawardenepura',\n  'Asia/Almaty': 'Almaty, Novosibirsk',\n  'Asia/Rangoon': 'Yangon Rangoon',\n  'Asia/Bangkok': 'Bangkok, Hanoi, Jakarta',\n  'Asia/Krasnoyarsk': 'Krasnoyarsk',\n  'Asia/Shanghai': 'Beijing, Chongqing, Hong Kong SAR, Urumqi',\n  'Asia/Kuala_Lumpur': 'Kuala Lumpur, Singapore',\n  'Asia/Taipei': 'Taipei',\n  'Australia/Perth': 'Perth',\n  'Asia/Irkutsk': 'Irkutsk, Ulaanbaatar',\n  'Asia/Seoul': 'Seoul',\n  'Asia/Tokyo': 'Osaka, Sapporo, Tokyo',\n  'Asia/Yakutsk': 'Yakutsk',\n  'Australia/Darwin': 'Darwin',\n  'Australia/Adelaide': 'Adelaide',\n  'Australia/Sydney': 'Canberra, Melbourne, Sydney',\n  'Australia/Brisbane': 'Brisbane',\n  'Australia/Hobart': 'Hobart',\n  'Asia/Vladivostok': 'Vladivostok',\n  'Pacific/Guam': 'Guam, Port Moresby',\n  'Asia/Magadan': 'Magadan, Solomon Islands, New Caledonia',\n  'Asia/Kamchatka': 'Kamchatka, Marshall Islands',\n  'Pacific/Fiji': 'Fiji Islands',\n  'Pacific/Auckland': 'Auckland, Wellington',\n  'Pacific/Tongatapu': \"Nuku'alofa\"\n};\nexport var LabelType;\n\n(function (LabelType) {\n  LabelType[\"ORIGINAL\"] = \"original\";\n  LabelType[\"ALTNAME\"] = \"altName\";\n  LabelType[\"ABBREV\"] = \"abbrev\";\n})(LabelType || (LabelType = {}));\n\nvar TimezoneSelect = function TimezoneSelect(_ref) {\n  _s();\n\n  var value = _ref.value,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      _ref$labelStyle = _ref.labelStyle,\n      labelStyle = _ref$labelStyle === void 0 ? 'original' : _ref$labelStyle,\n      _ref$timezones = _ref.timezones,\n      timezones = _ref$timezones === void 0 ? i18nTimezones : _ref$timezones,\n      props = _objectWithoutProperties(_ref, [\"value\", \"onBlur\", \"onChange\", \"labelStyle\", \"timezones\"]);\n\n  var getOptions = React.useMemo(function () {\n    return Object.entries(timezones).reduce(function (selectOptions, zone) {\n      var now = spacetime.now()[\"goto\"](zone[0]);\n      var tz = now.timezone();\n      var tzStrings = display(zone[0]);\n      var label = '';\n      var abbrev = zone[0];\n      var altName = zone[0];\n\n      if (tzStrings && tzStrings.daylight && tzStrings.standard) {\n        abbrev = now.isDST() ? tzStrings.daylight.abbrev : tzStrings.standard.abbrev;\n        altName = now.isDST() ? tzStrings.daylight.name : tzStrings.standard.name;\n      }\n\n      var min = tz.current.offset * 60;\n      var hr = \"\".concat(min / 60 ^ 0, \":\") + (min % 60 === 0 ? '00' : Math.abs(min % 60));\n      var prefix = \"(GMT\".concat(hr.includes('-') ? hr : \"+\".concat(hr), \") \").concat(zone[1]);\n\n      switch (labelStyle) {\n        case 'original':\n          label = prefix;\n          break;\n\n        case 'altName':\n          label = \"\".concat(prefix, \" \").concat(!altName.includes('/') ? \"(\".concat(altName, \")\") : '');\n          break;\n\n        case 'abbrev':\n          label = \"\".concat(prefix, \" \").concat(abbrev.length < 5 ? \"(\".concat(abbrev, \")\") : '');\n          break;\n\n        default:\n          label = \"\".concat(prefix);\n      }\n\n      selectOptions.push({\n        value: zone[0],\n        label: label,\n        offset: tz.current.offset,\n        abbrev: abbrev,\n        altName: altName\n      });\n      return selectOptions;\n    }, []).sort(function (a, b) {\n      return a.offset - b.offset;\n    });\n  }, [labelStyle, timezones]);\n\n  var handleChange = function handleChange(tz) {\n    onChange && onChange(tz);\n  };\n\n  var findFuzzyTz = function findFuzzyTz(zone) {\n    var currentTime;\n\n    try {\n      currentTime = spacetime.now(zone);\n    } catch (err) {\n      return;\n    }\n\n    return getOptions.filter(function (tz) {\n      return tz.offset === currentTime.timezone().current.offset;\n    }).map(function (tz) {\n      var score = 0;\n\n      if (currentTime.timezones[tz.value.toLowerCase()] && !!currentTime.timezones[tz.value.toLowerCase()].dst === currentTime.timezone().hasDst) {\n        if (tz.value.toLowerCase().indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n          score += 8;\n        }\n\n        if (tz.label.toLowerCase().indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n          score += 4;\n        }\n\n        if (tz.value.toLowerCase().indexOf(currentTime.tz.substr(0, currentTime.tz.indexOf('/')))) {\n          score += 2;\n        }\n\n        score += 1;\n      } else if (tz.value === 'GMT') {\n        score += 1;\n      }\n\n      return {\n        tz: tz,\n        score: score\n      };\n    }).sort(function (a, b) {\n      return b.score - a.score;\n    }).map(function (_ref2) {\n      var tz = _ref2.tz,\n          score = _ref2.score;\n      return tz;\n    })[0];\n  };\n\n  var parseTimezone = function parseTimezone(zone) {\n    if (typeof zone === 'object' && zone.value && zone.label) return zone;\n\n    if (typeof zone === 'string') {\n      return getOptions.find(function (tz) {\n        return tz.value === zone;\n      }) || zone.indexOf('/') !== -1 && findFuzzyTz(zone);\n    } else if (zone.value && !zone.label) {\n      return getOptions.find(function (tz) {\n        return tz.value === zone.value;\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Select, Object.assign({\n    value: parseTimezone(value),\n    onChange: handleChange,\n    options: getOptions,\n    onBlur: onBlur\n  }, props));\n};\n\n_s(TimezoneSelect, \"4jMhRRpLnxIyTYn4XiHyM0hhw78=\");\n\n_c = TimezoneSelect;\nexport default TimezoneSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimezoneSelect\");","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAP,MAAmB,cAAnB;AACA,OAAO,SAAP,MAAsB,WAAtB;AACA,SAAS,OAAT,QAAwB,oBAAxB;AASA,OAAO,IAAM,aAAa,GAAoB;AAC5C,oBAAkB,sBAD0B;AAE5C,sBAAoB,QAFwB;AAG5C,oBAAkB,QAH0B;AAI5C,mBAAiB,eAJ2B;AAK5C,oBAAkB,eAL0B;AAM5C,uBAAqB,6BANuB;AAO5C,qBAAmB,SAPyB;AAQ5C,qBAAmB,cARyB;AAS5C,oBAAkB,cAT0B;AAU5C,yBAAuB,qCAVqB;AAW5C,oBAAkB,iBAX0B;AAY5C,qBAAmB,cAZyB;AAa5C,oBAAkB,qBAb0B;AAc5C,qBAAmB,iBAdyB;AAe5C,sBAAoB,UAfwB;AAgB5C,sBAAoB,2BAhBwB;AAiB5C,uBAAqB,UAjBuB;AAkB5C,qBAAmB,uBAlByB;AAmB5C,oCAAkC,0BAnBU;AAoB5C,qBAAmB,WApByB;AAqB5C,qBAAmB,QArByB;AAsB5C,yBAAuB,oBAtBqB;AAuB5C,EAAA,GAAG,EAAE,KAvBuC;AAwB5C,mBAAiB,mBAxB2B;AAyB5C,mBAAiB,QAzB2B;AA0B5C,mBAAiB,QA1B2B;AA2B5C,uBAAqB,sBA3BuB;AA4B5C,qBAAmB,gBA5ByB;AA6B5C,qBAAmB,mDA7ByB;AA8B5C,qBAAmB,kCA9ByB;AA+B5C,qBAAmB,qCA/ByB;AAgC5C,sBAAoB,kDAhCwB;AAiC5C,oBAAkB,qBAjC0B;AAkC5C,sBAAoB,WAlCwB;AAmC5C,kBAAgB,OAnC4B;AAoC5C,qBAAmB,+CApCyB;AAqC5C,mBAAiB,yBArC2B;AAsC5C,oBAAkB,WAtC0B;AAuC5C,mBAAiB,kBAvC2B;AAwC5C,mBAAiB,mCAxC2B;AAyC5C,iBAAe,gBAzC6B;AA0C5C,oBAAkB,SA1C0B;AA2C5C,kBAAgB,SA3C4B;AA4C5C,iBAAe,QA5C6B;AA6C5C,gBAAc,mBA7C8B;AA8C5C,eAAa,wBA9C+B;AA+C5C,gBAAc,OA/C8B;AAgD5C,wBAAsB,cAhDsB;AAiD5C,kBAAgB,8BAjD4B;AAkD5C,kBAAgB,qCAlD4B;AAmD5C,oBAAkB,WAnD0B;AAoD5C,gBAAc,eApD8B;AAqD5C,kBAAgB,qBArD4B;AAsD5C,iBAAe,qBAtD6B;AAuD5C,kBAAgB,gBAvD4B;AAwD5C,kBAAgB,yBAxD4B;AAyD5C,sBAAoB,aAzDwB;AA0D5C,mBAAiB,2CA1D2B;AA2D5C,uBAAqB,yBA3DuB;AA4D5C,iBAAe,QA5D6B;AA6D5C,qBAAmB,OA7DyB;AA8D5C,kBAAgB,sBA9D4B;AA+D5C,gBAAc,OA/D8B;AAgE5C,gBAAc,uBAhE8B;AAiE5C,kBAAgB,SAjE4B;AAkE5C,sBAAoB,QAlEwB;AAmE5C,wBAAsB,UAnEsB;AAoE5C,sBAAoB,6BApEwB;AAqE5C,wBAAsB,UArEsB;AAsE5C,sBAAoB,QAtEwB;AAuE5C,sBAAoB,aAvEwB;AAwE5C,kBAAgB,oBAxE4B;AAyE5C,kBAAgB,yCAzE4B;AA0E5C,oBAAkB,6BA1E0B;AA2E5C,kBAAgB,cA3E4B;AA4E5C,sBAAoB,sBA5EwB;AA6E5C,uBAAqB;AA7EuB,CAAvC;AAiFP,OAAA,IAAY,SAAZ;;AAAA,CAAA,UAAY,SAAZ,EAAqB;AACnB,EAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACD,CAJD,EAAY,SAAS,KAAT,SAAS,GAAA,EAAA,CAArB;;AAsBA,IAAM,cAAc,GAAG,SAAjB,cAAiB,OAOX;AAAA;;AAAA,MANV,KAMU,QANV,KAMU;AAAA,MALV,MAKU,QALV,MAKU;AAAA,MAJV,QAIU,QAJV,QAIU;AAAA,6BAHV,UAGU;AAAA,MAHV,UAGU,gCAHG,UAGH;AAAA,4BAFV,SAEU;AAAA,MAFV,SAEU,+BAFE,aAEF;AAAA,MADP,KACO;;AACV,MAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,YAAK;AACpC,WAAO,MAAM,CAAC,OAAP,CAAe,SAAf,EACJ,MADI,CACG,UAAC,aAAD,EAAgB,IAAhB,EAAwB;AAC9B,UAAM,GAAG,GAAG,SAAS,CAAC,GAAV,WAAqB,IAAI,CAAC,CAAD,CAAzB,CAAZ;AACA,UAAM,EAAE,GAAG,GAAG,CAAC,QAAJ,EAAX;AACA,UAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAD,CAAL,CAAzB;AAEA,UAAI,KAAK,GAAG,EAAZ;AACA,UAAI,MAAM,GAAG,IAAI,CAAC,CAAD,CAAjB;AACA,UAAI,OAAO,GAAG,IAAI,CAAC,CAAD,CAAlB;;AAEA,UAAI,SAAS,IAAI,SAAS,CAAC,QAAvB,IAAmC,SAAS,CAAC,QAAjD,EAA2D;AACzD,QAAA,MAAM,GAAG,GAAG,CAAC,KAAJ,KACL,SAAS,CAAC,QAAV,CAAmB,MADd,GAEL,SAAS,CAAC,QAAV,CAAmB,MAFvB;AAGA,QAAA,OAAO,GAAG,GAAG,CAAC,KAAJ,KACN,SAAS,CAAC,QAAV,CAAmB,IADb,GAEN,SAAS,CAAC,QAAV,CAAmB,IAFvB;AAGD;;AAED,UAAM,GAAG,GAAG,EAAE,CAAC,OAAH,CAAW,MAAX,GAAoB,EAAhC;AACA,UAAM,EAAE,GACN,UAAI,GAAG,GAAG,EAAP,GAAa,CAAhB,UAAwB,GAAG,GAAG,EAAN,KAAa,CAAb,GAAiB,IAAjB,GAAwB,IAAI,CAAC,GAAL,CAAS,GAAG,GAAG,EAAf,CAAhD,CADF;AAEA,UAAM,MAAM,iBAAU,EAAE,CAAC,QAAH,CAAY,GAAZ,IAAmB,EAAnB,cAA4B,EAA5B,CAAV,eAA+C,IAAI,CAAC,CAAD,CAAnD,CAAZ;;AAEA,cAAQ,UAAR;AACE,aAAK,UAAL;AACE,UAAA,KAAK,GAAG,MAAR;AACA;;AACF,aAAK,SAAL;AACE,UAAA,KAAK,aAAM,MAAN,cAAgB,CAAC,OAAO,CAAC,QAAR,CAAiB,GAAjB,CAAD,cAA6B,OAA7B,SAA0C,EAA1D,CAAL;AACA;;AACF,aAAK,QAAL;AACE,UAAA,KAAK,aAAM,MAAN,cAAgB,MAAM,CAAC,MAAP,GAAgB,CAAhB,cAAwB,MAAxB,SAAoC,EAApD,CAAL;AACA;;AACF;AACE,UAAA,KAAK,aAAM,MAAN,CAAL;AAXJ;;AAcA,MAAA,aAAa,CAAC,IAAd,CAAmB;AACjB,QAAA,KAAK,EAAE,IAAI,CAAC,CAAD,CADM;AAEjB,QAAA,KAAK,EAAE,KAFU;AAGjB,QAAA,MAAM,EAAE,EAAE,CAAC,OAAH,CAAW,MAHF;AAIjB,QAAA,MAAM,EAAE,MAJS;AAKjB,QAAA,OAAO,EAAE;AALQ,OAAnB;AAQA,aAAO,aAAP;AACD,KA/CI,EA+CF,EA/CE,EAgDJ,IAhDI,CAgDC,UAAC,CAAD,EAAqB,CAArB;AAAA,aAA4C,CAAC,CAAC,MAAF,GAAW,CAAC,CAAC,MAAzD;AAAA,KAhDD,CAAP;AAiDD,GAlDkB,EAkDhB,CAAC,UAAD,EAAa,SAAb,CAlDgB,CAAnB;;AAoDA,MAAM,YAAY,GAAG,SAAf,YAAe,CAAC,EAAD,EAAkB;AACrC,IAAA,QAAQ,IAAI,QAAQ,CAAC,EAAD,CAApB;AACD,GAFD;;AAIA,MAAM,WAAW,GAAG,SAAd,WAAc,CAAC,IAAD,EAAkC;AACpD,QAAI,WAAJ;;AACA,QAAI;AACF,MAAA,WAAW,GAAG,SAAS,CAAC,GAAV,CAAc,IAAd,CAAd;AACD,KAFD,CAEE,OAAO,GAAP,EAAY;AACZ;AACD;;AACD,WAAO,UAAU,CACd,MADI,CAEH,UAAC,EAAD;AAAA,aACE,EAAE,CAAC,MAAH,KAAc,WAAW,CAAC,QAAZ,GAAuB,OAAvB,CAA+B,MAD/C;AAAA,KAFG,EAKJ,GALI,CAKA,UAAC,EAAD,EAAwB;AAC3B,UAAI,KAAK,GAAG,CAAZ;;AACA,UACE,WAAW,CAAC,SAAZ,CAAsB,EAAE,CAAC,KAAH,CAAS,WAAT,EAAtB,KACA,CAAC,CAAC,WAAW,CAAC,SAAZ,CAAsB,EAAE,CAAC,KAAH,CAAS,WAAT,EAAtB,EAA8C,GAAhD,KACE,WAAW,CAAC,QAAZ,GAAuB,MAH3B,EAIE;AACA,YACE,EAAE,CAAC,KAAH,CACG,WADH,GAEG,OAFH,CAGI,WAAW,CAAC,EAAZ,CAAe,MAAf,CAAsB,WAAW,CAAC,EAAZ,CAAe,OAAf,CAAuB,GAAvB,IAA8B,CAApD,CAHJ,MAIQ,CAAC,CALX,EAME;AACA,UAAA,KAAK,IAAI,CAAT;AACD;;AACD,YACE,EAAE,CAAC,KAAH,CACG,WADH,GAEG,OAFH,CAGI,WAAW,CAAC,EAAZ,CAAe,MAAf,CAAsB,WAAW,CAAC,EAAZ,CAAe,OAAf,CAAuB,GAAvB,IAA8B,CAApD,CAHJ,MAIQ,CAAC,CALX,EAME;AACA,UAAA,KAAK,IAAI,CAAT;AACD;;AACD,YACE,EAAE,CAAC,KAAH,CACG,WADH,GAEG,OAFH,CAEW,WAAW,CAAC,EAAZ,CAAe,MAAf,CAAsB,CAAtB,EAAyB,WAAW,CAAC,EAAZ,CAAe,OAAf,CAAuB,GAAvB,CAAzB,CAFX,CADF,EAIE;AACA,UAAA,KAAK,IAAI,CAAT;AACD;;AACD,QAAA,KAAK,IAAI,CAAT;AACD,OA/BD,MA+BO,IAAI,EAAE,CAAC,KAAH,KAAa,KAAjB,EAAwB;AAC7B,QAAA,KAAK,IAAI,CAAT;AACD;;AACD,aAAO;AAAE,QAAA,EAAE,EAAF,EAAF;AAAM,QAAA,KAAK,EAAL;AAAN,OAAP;AACD,KA1CI,EA2CJ,IA3CI,CA2CC,UAAC,CAAD,EAAI,CAAJ;AAAA,aAAU,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAtB;AAAA,KA3CD,EA4CJ,GA5CI,CA4CA;AAAA,UAAG,EAAH,SAAG,EAAH;AAAA,UAAO,KAAP,SAAO,KAAP;AAAA,aAAmB,EAAnB;AAAA,KA5CA,EA4CuB,CA5CvB,CAAP;AA6CD,GApDD;;AAsDA,MAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,IAAD,EAAoB;AACxC,QAAI,OAAO,IAAP,KAAgB,QAAhB,IAA4B,IAAI,CAAC,KAAjC,IAA0C,IAAI,CAAC,KAAnD,EAA0D,OAAO,IAAP;;AAC1D,QAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,aACE,UAAU,CAAC,IAAX,CAAgB,UAAA,EAAE;AAAA,eAAI,EAAE,CAAC,KAAH,KAAa,IAAjB;AAAA,OAAlB,KACC,IAAI,CAAC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAAvB,IAA4B,WAAW,CAAC,IAAD,CAF1C;AAID,KALD,MAKO,IAAI,IAAI,CAAC,KAAL,IAAc,CAAC,IAAI,CAAC,KAAxB,EAA+B;AACpC,aAAO,UAAU,CAAC,IAAX,CAAgB,UAAA,EAAE;AAAA,eAAI,EAAE,CAAC,KAAH,KAAa,IAAI,CAAC,KAAtB;AAAA,OAAlB,CAAP;AACD;AACF,GAVD;;AAYA,sBACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACL,IAAA,KAAK,EAAE,aAAa,CAAC,KAAD,CADf;AAEL,IAAA,QAAQ,EAAE,YAFL;AAGL,IAAA,OAAO,EAAE,UAHJ;AAIL,IAAA,MAAM,EAAE;AAJH,GAAA,EAKD,KALC,CAAP,CADF;AASD,CA3ID;;GAAM,c;;KAAA,c;AA6IN,eAAe,cAAf","sourceRoot":"","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport spacetime from 'spacetime';\nimport { display } from 'spacetime-informal';\nexport const i18nTimezones = {\n    'Pacific/Midway': 'Midway Island, Samoa',\n    'Pacific/Honolulu': 'Hawaii',\n    'America/Juneau': 'Alaska',\n    'America/Boise': 'Mountain Time',\n    'America/Dawson': 'Dawson, Yukon',\n    'America/Chihuahua': 'Chihuahua, La Paz, Mazatlan',\n    'America/Phoenix': 'Arizona',\n    'America/Chicago': 'Central Time',\n    'America/Regina': 'Saskatchewan',\n    'America/Mexico_City': 'Guadalajara, Mexico City, Monterrey',\n    'America/Belize': 'Central America',\n    'America/Detroit': 'Eastern Time',\n    'America/Bogota': 'Bogota, Lima, Quito',\n    'America/Caracas': 'Caracas, La Paz',\n    'America/Santiago': 'Santiago',\n    'America/St_Johns': 'Newfoundland and Labrador',\n    'America/Sao_Paulo': 'Brasilia',\n    'America/Tijuana': 'Tijuana, Pacific Time',\n    'America/Argentina/Buenos_Aires': 'Buenos Aires, Georgetown',\n    'America/Godthab': 'Greenland',\n    'Atlantic/Azores': 'Azores',\n    'Atlantic/Cape_Verde': 'Cape Verde Islands',\n    GMT: 'UTC',\n    'Europe/London': 'Edinburgh, London',\n    'Europe/Dublin': 'Dublin',\n    'Europe/Lisbon': 'Lisbon',\n    'Africa/Casablanca': 'Casablanca, Monrovia',\n    'Atlantic/Canary': 'Canary Islands',\n    'Europe/Belgrade': 'Belgrade, Bratislava, Budapest, Ljubljana, Prague',\n    'Europe/Sarajevo': 'Sarajevo, Skopje, Warsaw, Zagreb',\n    'Europe/Brussels': 'Brussels, Copenhagen, Madrid, Paris',\n    'Europe/Amsterdam': 'Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',\n    'Africa/Algiers': 'West Central Africa',\n    'Europe/Bucharest': 'Bucharest',\n    'Africa/Cairo': 'Cairo',\n    'Europe/Helsinki': 'Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius',\n    'Europe/Athens': 'Athens, Istanbul, Minsk',\n    'Asia/Jerusalem': 'Jerusalem',\n    'Africa/Harare': 'Harare, Pretoria',\n    'Europe/Moscow': 'Moscow, St. Petersburg, Volgograd',\n    'Asia/Kuwait': 'Kuwait, Riyadh',\n    'Africa/Nairobi': 'Nairobi',\n    'Asia/Baghdad': 'Baghdad',\n    'Asia/Tehran': 'Tehran',\n    'Asia/Dubai': 'Abu Dhabi, Muscat',\n    'Asia/Baku': 'Baku, Tbilisi, Yerevan',\n    'Asia/Kabul': 'Kabul',\n    'Asia/Yekaterinburg': 'Ekaterinburg',\n    'Asia/Karachi': 'Islamabad, Karachi, Tashkent',\n    'Asia/Kolkata': 'Chennai, Kolkata, Mumbai, New Delhi',\n    'Asia/Kathmandu': 'Kathmandu',\n    'Asia/Dhaka': 'Astana, Dhaka',\n    'Asia/Colombo': 'Sri Jayawardenepura',\n    'Asia/Almaty': 'Almaty, Novosibirsk',\n    'Asia/Rangoon': 'Yangon Rangoon',\n    'Asia/Bangkok': 'Bangkok, Hanoi, Jakarta',\n    'Asia/Krasnoyarsk': 'Krasnoyarsk',\n    'Asia/Shanghai': 'Beijing, Chongqing, Hong Kong SAR, Urumqi',\n    'Asia/Kuala_Lumpur': 'Kuala Lumpur, Singapore',\n    'Asia/Taipei': 'Taipei',\n    'Australia/Perth': 'Perth',\n    'Asia/Irkutsk': 'Irkutsk, Ulaanbaatar',\n    'Asia/Seoul': 'Seoul',\n    'Asia/Tokyo': 'Osaka, Sapporo, Tokyo',\n    'Asia/Yakutsk': 'Yakutsk',\n    'Australia/Darwin': 'Darwin',\n    'Australia/Adelaide': 'Adelaide',\n    'Australia/Sydney': 'Canberra, Melbourne, Sydney',\n    'Australia/Brisbane': 'Brisbane',\n    'Australia/Hobart': 'Hobart',\n    'Asia/Vladivostok': 'Vladivostok',\n    'Pacific/Guam': 'Guam, Port Moresby',\n    'Asia/Magadan': 'Magadan, Solomon Islands, New Caledonia',\n    'Asia/Kamchatka': 'Kamchatka, Marshall Islands',\n    'Pacific/Fiji': 'Fiji Islands',\n    'Pacific/Auckland': 'Auckland, Wellington',\n    'Pacific/Tongatapu': \"Nuku'alofa\",\n};\nexport var LabelType;\n(function (LabelType) {\n    LabelType[\"ORIGINAL\"] = \"original\";\n    LabelType[\"ALTNAME\"] = \"altName\";\n    LabelType[\"ABBREV\"] = \"abbrev\";\n})(LabelType || (LabelType = {}));\nconst TimezoneSelect = ({ value, onBlur, onChange, labelStyle = 'original', timezones = i18nTimezones, ...props }) => {\n    const getOptions = React.useMemo(() => {\n        return Object.entries(timezones)\n            .reduce((selectOptions, zone) => {\n            const now = spacetime.now().goto(zone[0]);\n            const tz = now.timezone();\n            const tzStrings = display(zone[0]);\n            let label = '';\n            let abbrev = zone[0];\n            let altName = zone[0];\n            if (tzStrings && tzStrings.daylight && tzStrings.standard) {\n                abbrev = now.isDST()\n                    ? tzStrings.daylight.abbrev\n                    : tzStrings.standard.abbrev;\n                altName = now.isDST()\n                    ? tzStrings.daylight.name\n                    : tzStrings.standard.name;\n            }\n            const min = tz.current.offset * 60;\n            const hr = `${(min / 60) ^ 0}:` + (min % 60 === 0 ? '00' : Math.abs(min % 60));\n            const prefix = `(GMT${hr.includes('-') ? hr : `+${hr}`}) ${zone[1]}`;\n            switch (labelStyle) {\n                case 'original':\n                    label = prefix;\n                    break;\n                case 'altName':\n                    label = `${prefix} ${!altName.includes('/') ? `(${altName})` : ''}`;\n                    break;\n                case 'abbrev':\n                    label = `${prefix} ${abbrev.length < 5 ? `(${abbrev})` : ''}`;\n                    break;\n                default:\n                    label = `${prefix}`;\n            }\n            selectOptions.push({\n                value: zone[0],\n                label: label,\n                offset: tz.current.offset,\n                abbrev: abbrev,\n                altName: altName,\n            });\n            return selectOptions;\n        }, [])\n            .sort((a, b) => a.offset - b.offset);\n    }, [labelStyle, timezones]);\n    const handleChange = (tz) => {\n        onChange && onChange(tz);\n    };\n    const findFuzzyTz = (zone) => {\n        let currentTime;\n        try {\n            currentTime = spacetime.now(zone);\n        }\n        catch (err) {\n            return;\n        }\n        return getOptions\n            .filter((tz) => tz.offset === currentTime.timezone().current.offset)\n            .map((tz) => {\n            let score = 0;\n            if (currentTime.timezones[tz.value.toLowerCase()] &&\n                !!currentTime.timezones[tz.value.toLowerCase()].dst ===\n                    currentTime.timezone().hasDst) {\n                if (tz.value\n                    .toLowerCase()\n                    .indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n                    score += 8;\n                }\n                if (tz.label\n                    .toLowerCase()\n                    .indexOf(currentTime.tz.substr(currentTime.tz.indexOf('/') + 1)) !== -1) {\n                    score += 4;\n                }\n                if (tz.value\n                    .toLowerCase()\n                    .indexOf(currentTime.tz.substr(0, currentTime.tz.indexOf('/')))) {\n                    score += 2;\n                }\n                score += 1;\n            }\n            else if (tz.value === 'GMT') {\n                score += 1;\n            }\n            return { tz, score };\n        })\n            .sort((a, b) => b.score - a.score)\n            .map(({ tz, score }) => tz)[0];\n    };\n    const parseTimezone = (zone) => {\n        if (typeof zone === 'object' && zone.value && zone.label)\n            return zone;\n        if (typeof zone === 'string') {\n            return (getOptions.find(tz => tz.value === zone) ||\n                (zone.indexOf('/') !== -1 && findFuzzyTz(zone)));\n        }\n        else if (zone.value && !zone.label) {\n            return getOptions.find(tz => tz.value === zone.value);\n        }\n    };\n    return (React.createElement(Select, Object.assign({ value: parseTimezone(value), onChange: handleChange, options: getOptions, onBlur: onBlur }, props)));\n};\nexport default TimezoneSelect;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}