{"ast":null,"code":"var _jsxFileName = \"/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/contexts/SetupContext.tsx\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { SetupOptions } from 'utils/setupOptions';\nconst urlPrefix = '/profile/setup/';\nexport const SetupContext = /*#__PURE__*/React.createContext({\n  options: new SetupOptions(),\n  stepIndex: 0,\n  onNextPress: () => undefined,\n  onBackPress: () => undefined,\n  nextButtonLabel: 'Next Step'\n});\nexport const SetupContextProvider = ({\n  children\n}) => {\n  const options = useMemo(() => new SetupOptions(), []);\n  const router = useRouter();\n  const pageMatches = router.pathname.match(`${urlPrefix}(.+)`);\n  const slug = pageMatches != null && pageMatches.length > 1 ? pageMatches[1] : null;\n  const stepIndex = options.stepIndexMatchingSlug(slug);\n  const currentStep = options.steps[stepIndex];\n  const {\n    0: nextButtonLabel,\n    1: setNextButtonLabel\n  } = useState('Next Step');\n  useEffect(() => {\n    if (options.isLastStep(stepIndex)) {\n      setNextButtonLabel(currentStep.label);\n    } else {\n      const nextStep = options.steps[stepIndex + 1];\n      let nextStepLabel = nextStep.label;\n\n      if (options.isFinalStepOfSection(stepIndex)) {\n        nextStepLabel = options.sections[nextStep.sectionIndex].label;\n      }\n\n      setNextButtonLabel(`Next: ${nextStepLabel}`);\n    }\n  }, [options, stepIndex, setNextButtonLabel, currentStep]);\n  const onNextPress = useCallback(() => {\n    if (!options.isLastStep(stepIndex)) {\n      const nextStep = options.steps[stepIndex + 1];\n      router.push(`${urlPrefix}${nextStep.slug}`);\n    }\n  }, [router, options, stepIndex]);\n  const onBackPress = useCallback(() => {\n    if (stepIndex <= 0) {\n      router.push('/');\n    } else {\n      const previousStep = options.steps[stepIndex - 1];\n      router.push(`${urlPrefix}${previousStep.slug}`);\n    }\n  }, [router, options, stepIndex]);\n  return __jsx(SetupContext.Provider, {\n    value: {\n      options,\n      stepIndex,\n      onNextPress,\n      onBackPress,\n      nextButtonLabel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useSetupFlow = () => useContext(SetupContext);","map":{"version":3,"sources":["/Users/mark.wagner/Dropbox/projects/TheGame/packages/web/contexts/SetupContext.tsx"],"names":["useRouter","React","useCallback","useContext","useEffect","useMemo","useState","SetupOptions","urlPrefix","SetupContext","createContext","options","stepIndex","onNextPress","undefined","onBackPress","nextButtonLabel","SetupContextProvider","children","router","pageMatches","pathname","match","slug","length","stepIndexMatchingSlug","currentStep","steps","setNextButtonLabel","isLastStep","label","nextStep","nextStepLabel","isFinalStepOfSection","sections","sectionIndex","push","previousStep","useSetupFlow"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { SetupOptions } from 'utils/setupOptions';\n\nconst urlPrefix = '/profile/setup/';\n\ntype SetupContextType = {\n  options: SetupOptions;\n  stepIndex: number;\n  onNextPress: () => void;\n  onBackPress: () => void;\n  nextButtonLabel: string;\n};\n\nexport const SetupContext = React.createContext<SetupContextType>({\n  options: new SetupOptions(),\n  stepIndex: 0,\n  onNextPress: () => undefined,\n  onBackPress: () => undefined,\n  nextButtonLabel: 'Next Step',\n});\n\nexport const SetupContextProvider: React.FC = ({ children }) => {\n  const options = useMemo(() => new SetupOptions(), []);\n\n  const router = useRouter();\n\n  const pageMatches = router.pathname.match(`${urlPrefix}(.+)`);\n  const slug =\n    pageMatches != null && pageMatches.length > 1 ? pageMatches[1] : null;\n  const stepIndex = options.stepIndexMatchingSlug(slug);\n  const currentStep = options.steps[stepIndex];\n\n  const [nextButtonLabel, setNextButtonLabel] = useState('Next Step');\n\n  useEffect(() => {\n    if (options.isLastStep(stepIndex)) {\n      setNextButtonLabel(currentStep.label);\n    } else {\n      const nextStep = options.steps[stepIndex + 1];\n      let nextStepLabel = nextStep.label;\n      if (options.isFinalStepOfSection(stepIndex)) {\n        nextStepLabel = options.sections[nextStep.sectionIndex].label;\n      }\n      setNextButtonLabel(`Next: ${nextStepLabel}`);\n    }\n  }, [options, stepIndex, setNextButtonLabel, currentStep]);\n\n  const onNextPress = useCallback(() => {\n    if (!options.isLastStep(stepIndex)) {\n      const nextStep = options.steps[stepIndex + 1];\n      router.push(`${urlPrefix}${nextStep.slug}`);\n    }\n  }, [router, options, stepIndex]);\n\n  const onBackPress = useCallback(() => {\n    if (stepIndex <= 0) {\n      router.push('/');\n    } else {\n      const previousStep = options.steps[stepIndex - 1];\n      router.push(`${urlPrefix}${previousStep.slug}`);\n    }\n  }, [router, options, stepIndex]);\n\n  return (\n    <SetupContext.Provider\n      value={{\n        options,\n        stepIndex,\n        onNextPress,\n        onBackPress,\n        nextButtonLabel,\n      }}\n    >\n      {children}\n    </SetupContext.Provider>\n  );\n};\n\nexport const useSetupFlow = (): SetupContextType => useContext(SetupContext);\n"]},"metadata":{},"sourceType":"module"}