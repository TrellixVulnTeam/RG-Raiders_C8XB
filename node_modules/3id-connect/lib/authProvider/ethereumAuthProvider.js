"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _idBlockchainUtils = require("3id-blockchain-utils");

var _abstractAuthProvider = _interopRequireDefault(require("./abstractAuthProvider"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 *  AuthProvider which can be used for ethreum providers with standard interface
 */
var EthereumAuthProvider = /*#__PURE__*/function (_AbstractAuthProvider) {
  (0, _inherits2["default"])(EthereumAuthProvider, _AbstractAuthProvider);

  var _super = _createSuper(EthereumAuthProvider);

  function EthereumAuthProvider(ethProvider) {
    var _this;

    (0, _classCallCheck2["default"])(this, EthereumAuthProvider);
    _this = _super.call(this);
    _this.network = 'ethereum';
    _this.provider = ethProvider;
    return _this;
  }

  (0, _createClass2["default"])(EthereumAuthProvider, [{
    key: "authenticate",
    value: function () {
      var _authenticate2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(message, accountId) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", (0, _idBlockchainUtils.authenticate)(message, accountId, this.provider));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function authenticate(_x, _x2) {
        return _authenticate2.apply(this, arguments);
      }

      return authenticate;
    }()
  }, {
    key: "createLink",
    value: function () {
      var _createLink2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(did, accountId) {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", (0, _idBlockchainUtils.createLink)(did, accountId, this.provider, {
                  type: 'ethereum-eoa'
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function createLink(_x3, _x4) {
        return _createLink2.apply(this, arguments);
      }

      return createLink;
    }()
  }]);
  return EthereumAuthProvider;
}(_abstractAuthProvider["default"]);

var _default = EthereumAuthProvider;
exports["default"] = _default;