import { LinkProof } from '3id-blockchain-utils';
import { RequestHandler, RPCRequest, RPCResponse } from 'rpc-utils';
import { EncryptedMessage } from './crypto';
import IdentityWallet from './identity-wallet';
declare type Origin = string | null | undefined;
declare type Callback = (err: Error | null | undefined, res?: RPCResponse | null) => void;
export default class ThreeIdProvider {
    private _newAuthMethods;
    private _newLinks;
    protected _handle: RequestHandler;
    wallet: IdentityWallet;
    constructor(wallet: IdentityWallet);
    get is3idProvider(): boolean;
    pollAuthMethods(): Array<EncryptedMessage>;
    pollLinks(): Array<LinkProof>;
    send(req: RPCRequest, origin: Origin | Callback, callback?: Callback): Promise<RPCResponse | null>;
}
export {};
