/// <reference types="node" />
export interface EncryptedMessage {
    ciphertext: string;
    nonce: string;
}
export interface AsymEncryptedMessage extends EncryptedMessage {
    ephemeralFrom: string;
}
export declare function naclRandom(length: number): Uint8Array;
export declare function randomNonce(): Uint8Array;
export declare function symEncryptBase(message: Uint8Array | string, symKey: Uint8Array, providedNonce?: Uint8Array): EncryptedMessage;
export declare function symDecryptBase(ciphertext: string, symKey: Uint8Array, nonce: string, toBuffer?: false): string | null;
export declare function symDecryptBase(ciphertext: string, symKey: Uint8Array, nonce: string, toBuffer?: true): Buffer | null;
export declare function asymEncrypt(message: Uint8Array | string, toPublic: string, providedNonce?: Uint8Array): AsymEncryptedMessage;
export declare function asymDecrypt(ciphertext: string, fromPublic: string, toSecret: Uint8Array, nonce: string, toBuffer: true): Buffer | null;
export declare function asymDecrypt(ciphertext: string, fromPublic: string, toSecret: Uint8Array, nonce: string, toBuffer?: false): string | null;
