import{share as r,makeSubject as t,mergeMap as n,filter as e,takeUntil as o,delay as a,fromValue as u,merge as i}from"wonka";import{makeOperation as c}from"@urql/core";function y(){return(y=Object.assign||function(r){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(r[e]=n[e])}return r}).apply(this,arguments)}function f(f){var p=f.initialDelayMs||1e3,l=f.maxDelayMs||15e3,m=f.maxNumberAttempts||2,s=f.randomDelay||!0,v=f.retryIf||function(r){return r&&r.networkError};return function(f){var d=f.forward;return function(f){var k=r(f),x=t(),w=x.source,D=x.next,h=n((function(r){var t=r.key,n=r.context,i=(n.retryCount||0)+1,f=n.retryDelay||p,m=Math.random()+1.5;s&&f*m<l&&(f*=m);var v=e((function(r){return("query"===r.kind||"teardown"===r.kind)&&r.key===t}))(k);return o(v)(a(f)(u(c(r.kind,r,y({},r.context,{retryDelay:f,retryCount:i})))))}))(w);return e((function(r){return!(r.error&&v(r.error,r.operation)&&!((r.operation.context.retryCount||0)>=m-1)&&(D(r.operation),1))}))(r(d(i([k,h]))))}}}export{f as retryExchange};
//# sourceMappingURL=urql-exchange-retry.min.mjs.map
