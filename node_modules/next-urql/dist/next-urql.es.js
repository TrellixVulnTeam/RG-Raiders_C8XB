import e, { useState as t, createElement as n } from "react";

import r from "react-ssr-prepass";

import { createClient as i, ssrExchange as o, dedupExchange as a, cacheExchange as l, fetchExchange as u, Provider as s } from "urql";

function _extends() {
  return (_extends = Object.assign || function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var r in n) {
        if (Object.prototype.hasOwnProperty.call(n, r)) {
          e[r] = n[r];
        }
      }
    }
    return e;
  }).apply(this, arguments);
}

var p = null;

function resetClient() {
  p = null;
}

function initUrqlClient(e, t) {
  var n = "undefined" == typeof window;
  if (n || !p) {
    (p = i(_extends({}, e, {
      suspense: t && (n || e.suspense)
    }))).toJSON = function() {
      return null;
    };
  }
  return p;
}

var f;

function withUrqlClient(i, p) {
  if (!p) {
    p = {};
  }
  return function(c) {
    var v = Boolean((c.getInitialProps || p.ssr) && !p.neverSuspend);
    var WithUrql = function(r) {
      var p = r.pageProps;
      var d = r.urqlClient;
      var m = r.urqlState;
      var q = function objectWithoutProperties(e, t) {
        var n = {};
        for (var r in e) {
          if (Object.prototype.hasOwnProperty.call(e, r) && -1 === t.indexOf(r)) {
            n[r] = e[r];
          }
        }
        return n;
      }(r, [ "pageProps", "urqlClient", "urqlState" ]);
      var C = t(0);
      var h = p && p.urqlState || m;
      var P = e.useMemo((function() {
        if (d) {
          return d;
        }
        if (!f || "undefined" == typeof window) {
          f = o({
            initialState: h,
            isClient: !0
          });
        } else if (f && "undefined" != typeof window) {
          f.restoreData(h);
        }
        var e = i(f);
        if (!e.exchanges) {
          e.exchanges = [ a, l, f, u ];
        }
        return initUrqlClient(e, v);
      }), [ d, h, C[0] ]);
      return n(s, {
        value: P
      }, n(c, _extends({}, q, {
        pageProps: p,
        urqlClient: P,
        resetUrqlClient: function() {
          resetClient();
          f = o({
            initialState: void 0
          });
          C[1](C[0] + 1);
        }
      })));
    };
    WithUrql.displayName = "withUrqlClient(" + (c.displayName || c.name || "Component") + ")";
    if (c.getInitialProps || p.ssr) {
      WithUrql.getInitialProps = function(e) {
        try {
          function _temp4() {
            function _temp2() {
              return _extends({}, q, {
                urqlState: v ? v.extractData() : void 0,
                urqlClient: m
              });
            }
            if ("undefined" != typeof window) {
              return _extends({}, q, {
                urqlClient: m
              });
            }
            var e = _extends({}, q, {
              urqlClient: m
            });
            var i = s ? e : {
              pageProps: e
            };
            const o = function() {
              if (!p.neverSuspend) {
                return Promise.resolve(r(n(t, i))).then((function() {}));
              }
            }();
            return o && o.then ? o.then(_temp2) : _temp2();
          }
          var t = e.AppTree;
          var s = !!e.Component;
          var f = s ? e.ctx : e;
          var v = o({
            initialState: void 0
          });
          var d = i(v, f);
          if (!d.exchanges) {
            d.exchanges = [ a, l, v, u ];
          }
          var m = initUrqlClient(d, !p.neverSuspend);
          if (m) {
            f.urqlClient = m;
          }
          var q = {};
          const C = function() {
            if (c.getInitialProps) {
              return Promise.resolve(c.getInitialProps(e)).then((function(e) {
                q = e;
              }));
            }
          }();
          return Promise.resolve(C && C.then ? C.then(_temp4) : _temp4());
        } catch (e) {
          return Promise.reject(e);
        }
      };
    }
    return WithUrql;
  };
}

export { initUrqlClient, withUrqlClient };
//# sourceMappingURL=next-urql.es.js.map
